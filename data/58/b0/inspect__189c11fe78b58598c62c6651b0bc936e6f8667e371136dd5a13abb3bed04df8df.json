{
  "code": "b5ee9c72010101010044000084ff0020dda4f260810200d71820d70b1fed44d0d31fd3ffd15112baf2a122f901541044f910f2a2f80001d31f3120d74a96d307d402fb00ded1a4c8cb1fcbffc9ed54",
  "code_hash": "a0cfc2c48aee16a271f2cfc0b7382d81756cecb1017d077faaab3bb602f6868c",
  "methods": [],
  "compiler": "fift",
  "source": {
    "files": [
      {
        "name": "wallet_v1_r1.fif",
        "content": "#!/usr/bin/fift -s\n\"TonUtil.fif\" include\n\"Asm.fif\" include\n<{  SETCP0 DUP IFNOTRET INC 32 THROWIF  // return if recv_internal, fail unless recv_external\n    512 INT LDSLICEX DUP 32 PLDU   // sign cs cnt\n    c4 PUSHCTR CTOS 32 LDU 256 LDU ENDS  // sign cs cnt cnt' pubk\n    s1 s2 XCPU            // sign cs cnt pubk cnt' cnt\n    EQUAL 33 THROWIFNOT   // ( seqno mismatch? )\n    s2 PUSH HASHSU        // sign cs cnt pubk hash\n    s0 s4 s4 XC2PU        // pubk cs cnt hash sign pubk\n    CHKSIGNU              // pubk cs cnt ?\n    34 THROWIFNOT         // signature mismatch\n    ACCEPT\n    SWAP 32 LDU NIP\n    DUP SREFS IF:<{\n      8 LDU LDREF         // pubk cnt mode msg cs\n      s0 s2 XCHG SENDRAWMSG  // pubk cnt cs ; ( message sent )\n    }>\n    ENDS\n    INC NEWC 32 STU 256 STU ENDC c4 POPCTR\n}>c",
        "is_entrypoint": false,
        "is_std_lib": false,
        "include_in_command": false
      }
    ]
  }
}