{
  "code": "b5ee9c72010225010006e7000114ff00f4a413f4bcf2c80b01020120020302014804050364f2db3cdb3c30c0028ea38103f7f844c000f2f28103edf842c0fff2f28103f2f823f850b9f2f2f8567fdb3cf800e0840ff2f0220f150202cc060702012020210201200809002bbbf09b04200bebc20141f09bf0974cc900c9e0076c130201200a0b0037d41081dcd65002a100a0af801aa2181f801acd080d0e080c8b87038c0201200c0d0201201e1f0451007434c0c05c6c3c903e900c36cf3e15d48431c17e10b0002c23a10ccc76cf380876cf0860408aeea0220e0f10001320840ee6b280006a6120015c318103e9f856d749c202f2f28103ea01d31f821005138d9112ba12f2f48040d721fa4030f87670f8627ff864db3c1d00b020c700c0ff93307020e0d31f708b663616e63656c822c70593317132e08b473746f70822c70593317232e08b666696e697368822c70593317232e08b66465706c6f79822c70593317332e021d749c23f9430d33f309131e204fc8e625b6c228103ecf842c0fff844c000b1f2f4f843c705f2e193d430d0d3078103f4228020b0f2f28102588103f5f823f85023a1bcf823f85024a0b9b0f2f2f84ec3008e178103f5f823f84e23a1bcf823f84e5004a013b912b0f2f29130e2d43001fb00e03320c001e30220c002e302c003925f04e0f844c000e302f84211121314018e3031328103edf823f850bef2f28103edf842c0fff2f28103f7f844c000f2f28103f001821005f5e100b9f2f28103f1f84dc200f2f2f8565210c705f8435220c705b1f2e193db3c18018c3031328103edf842c0fff2f28103f7f844c000f2f28103f001821005f5e100b9f2f28103f2f823f850b9f2f2f8565210c705f8435220c705b1f84c5220c705b1f2e19370db3c15000e5f048103f7f2f004eec0fff823f850beb1975f048103edf2f0e0f852f853f854f855f0048103f301c000f2f2f850f823a18103f60182081a5e00bcf2f2f84a821005f5e100a05230bef84ac200b08f153202db3c20f86cf84af86df823f86e01f86f70db3ce0f850f851a1f823b997f850f851a0f870def84de303f00d5230b91c15161704c6f84dc0008e9bc0ff8e14f8276f22308103e80182101dcd6500b9f2f2f800dedb3ce0db3cf84df852f853f003f84df854f855f003f84d22a121a105c0ff8e188103e82582101dcd6500b9f2f20482101dcd6500a1f80004de21c200923330e30d21c2001823191a0132338103e8f8495230b9f2f201f86d01f86cf823f86ef86fdb3c1d0232975f048103e8f2f0e003db3c02f86cf86df823f86ef86fdb3c1c1d017c7020f82582105fcc3d14c8cb1fcb3ff856cf165003cf1612cb0021fa02cb00c9718018c8cb05f857cf1670fa02cb6accc9810082fb007ff8627ff866db3c1d005670208010c8cb055006cf165003fa0214cb6acb1f8bf4d61726b6574706c616365206665658cf16c972fb0001fc8e2270208010c8cb055003cf165003fa02cb6acb1f8b7526f79616c74798cf16c972fb00915be220c2008e2270208010c8cb05f856cf165003fa0212cb6acb1f8b650726f6669748cf16c972fb009130e27020f82582105fcc3d14c8cb1fcb3ff84ccf165003cf1612cb0071fa02cb00c9718018c8cb05f857cf1670fa021b0124cb6accc9810082fb007ff862f823f870db3c1d00e8f84dc1019130e0f84d8208551928a1218208989680a15210bc97308208989680a19131e220c2008e488d0a565bdd5c88189a59081a185cc81899595b881bdd5d189a5908189e48185b9bdd1a195c881d5cd95c8ba070208018c8cb05f84ccf165004fa0213cb6a12cb1f01cf16c972fb009130e20074f848f847f855f854f853f852f84ff850f84ef846f842c8ca00ca00f84ccf16f84dfa02cb1fcb1ff856cf16cb3fcb1fcb1fcb1fcb1fccccc9ed54001120840ee6b2802a6120001d08300024d7c0dc38167c00807c006002c7bce166d9e6d9e7c297c29fc2a7c2af8024081f980e0007979410420aaa1fc217c287c21fc2bfc2b7c26fc267c25fc297c29fc2a7c2afc257c24fc22fc277c230888888988888888088908880788888787088807086f8867085e8856084d884d0844883c4222302edbd528ed9e6d9e7c297c29fc2a7c2af8024081f980e00079797c26e1004a7806fc34ef7c227c217c287c21fc2bfc2b7c26fc267c25fc297c29fc2a7c2afc257c24fc22fc277c237c28fc278889888a88898889088a08890888888988888888088908880788888787088807086f8867085e885e0855884d4222301f4f8416edded44d0d20001f862d20001f866fa4001f86cfa0001f86dd31f01f86ed31f01f870fa4001f876d33f01f86fd31f01f872d31f01f873d31f01f874d31f01f875f856d749c202f864d401f867d430f868f848d0fa4001f863fa0001f869fa0001f86ad30601f86bd31001f871fa4001f877d31f30f8657f240010f847d0fa40fa40300004f861",
  "disassembled_code": "0 SETCP\n19 (xC_) DICTPUSHCONST\nDICTIGETJMPZ {\n      -1 => <{\n            CALL:<{\n                  1 GETGLOB\n                  ISNULL\n                  IFNOTRET\n                  c4 PUSH\n                  CTOS\n                  1 LDI\n                  SWAP\n                  2 SETGLOB\n                  1 LDI\n                  SWAP\n                  6 SETGLOB\n                  LDMSGADDR\n                  SWAP\n                  12 SETGLOB\n                  LDGRAMS\n                  SWAP\n                  13 SETGLOB\n                  32 LDU\n                  SWAP\n                  14 SETGLOB\n                  32 LDU\n                  SWAP\n                  16 SETGLOB\n                  LDMSGADDR\n                  SWAP\n                  22 SETGLOB\n                  64 LDU\n                  SWAP\n                  15 SETGLOB\n                  32 LDU\n                  SWAP\n                  18 SETGLOB\n                  32 LDU\n                  SWAP\n                  19 SETGLOB\n                  32 LDU\n                  SWAP\n                  20 SETGLOB\n                  32 LDU\n                  SWAP\n                  21 SETGLOB\n                  22 GETGLOB\n                  SBITS\n                  2 GTINT\n                  4 SETGLOB\n                  LDREF\n                  SWAP\n                  7 SETGLOB\n                  LDREF\n                  DROP\n                  8 SETGLOB\n                  8 GETGLOB\n                  CTOS\n                  LDMSGADDR\n                  SWAP\n                  3 SETGLOB\n                  LDGRAMS\n                  SWAP\n                  9 SETGLOB\n                  LDGRAMS\n                  SWAP\n                  10 SETGLOB\n                  7 LDU\n                  SWAP\n                  11 SETGLOB\n                  17 LDU\n                  SWAP\n                  17 SETGLOB\n                  LDMSGADDR\n                  SWAP\n                  23 SETGLOB\n                  32 LDU\n                  DROP\n                  5 SETGLOB\n                  -1 PUSHINT\n                  1 SETGLOB\n            }>\n            CALL:<{\n                  DUP\n                  SEMPTY\n                  -1 EQINT\n                  IFJMP:<{\n                        DROP\n                        0 PUSHINT\n                        DUP\n                  }>\n                  32 LDU\n                  0 PUSHINT\n                  x{63616E63656C} PUSHSLICE\n                  s2 PUSH\n                  SDEQ\n                  IFJMP:<{\n                        NIP\n                        1 PUSHINT\n                        s2 POP\n                  }>\n                  x{73746F70} PUSHSLICE\n                  s2 PUSH\n                  SDEQ\n                  IFJMP:<{\n                        NIP\n                        2 PUSHINT\n                        s2 POP\n                  }>\n                  x{66696E697368} PUSHSLICE\n                  s2 PUSH\n                  SDEQ\n                  IFJMP:<{\n                        NIP\n                        2 PUSHINT\n                        s2 POP\n                  }>\n                  x{6465706C6F79} PUSHSLICE\n                  s2 PUSH\n                  SDEQ\n                  IFJMP:<{\n                        NIP\n                        3 PUSHINT\n                        s2 POP\n                  }>\n                  OVER\n                  SBITS\n                  63 GTINT\n                  IF:<{\n                        DROP\n                        64 LDU\n                        DROP\n                  }>ELSE<{\n                        NIP\n                  }>\n            }>\n            DROP\n            2 EQINT\n            IFJMP:<{\n                  1015 PUSHINT\n                  4 GETGLOB\n                  0 EQINT\n                  THROWANYIF\n                  1005 PUSHINT\n                  2 GETGLOB\n                  -1 EQINT\n                  THROWANYIF\n                  1010 PUSHINT\n                  NOW\n                  16 GETGLOB\n                  LESS\n                  THROWANYIF\n                  22 GETGLOB\n                  -1 PUSHINT\n                  CALL:<{\n                        13 GETGLOB\n                        0 EQINT\n                        IFJMP:<{\n                              -1 EQINT\n                              IF:<{\n                                    BALANCE\n                                    2 UNTUPLE\n                                    DROP\n                                    1000 PUSHINT\n                                    SWAP\n                                    500000000 PUSHINT\n                                    LESS\n                                    THROWANYIF\n                                    ACCEPT\n                              }>\n                              CALL:<{\n                                    0 PUSHINT\n                                    DUP\n                                    LTIME\n                                    1607220500 PUSHINT\n                                    NEWC\n                                    32 STU\n                                    64 STU\n                                    22 GETGLOB\n                                    STSLICER\n                                    s0 s3 XCHG2\n                                    STSLICER\n                                    s1 s2 XCHG\n                                    1 STU\n                                    OVER\n                                    STGRAMS\n                                    1 STU\n                                    ENDC\n                                    1 PUSHINT\n                                    24 PUSHINT\n                                    NEWC\n                                    6 STU\n                                    23 GETGLOB\n                                    STSLICER\n                                    0 PUSHINT\n                                    STGRAMS\n                                    107 STU\n                                    STREF\n                                    ENDC\n                                    130 PUSHINT\n                                    SENDRAWMSG\n                                    -1 PUSHINT\n                                    2 SETGLOB\n                                    -1 PUSHINT\n                                    6 SETGLOB\n                                    CALL:<{\n                                          8 GETGLOB\n                                          7 GETGLOB\n                                          21 GETGLOB\n                                          20 GETGLOB\n                                          19 GETGLOB\n                                          18 GETGLOB\n                                          15 GETGLOB\n                                          16 GETGLOB\n                                          14 GETGLOB\n                                          6 GETGLOB\n                                          2 GETGLOB\n                                          NEWC\n                                          1 STI\n                                          1 STI\n                                          12 GETGLOB\n                                          STSLICER\n                                          13 GETGLOB\n                                          STGRAMS\n                                          32 STU\n                                          32 STU\n                                          22 GETGLOB\n                                          STSLICER\n                                          64 STU\n                                          32 STU\n                                          32 STU\n                                          32 STU\n                                          32 STU\n                                          STREF\n                                          STREF\n                                          ENDC\n                                          c4 POP\n                                    }>\n                              }>\n                        }>\n                        CALL:<{\n                              7 GETGLOB\n                              CTOS\n                              LDMSGADDR\n                              LDMSGADDR\n                              DROP\n                        }>\n                        13 GETGLOB\n                        18 GETGLOB\n                        19 GETGLOB\n                        3 CALLDICT\n                        13 GETGLOB\n                        20 GETGLOB\n                        21 GETGLOB\n                        3 CALLDICT\n                        13 GETGLOB\n                        s2 PUSH\n                        SUB\n                        OVER\n                        SUB\n                        s0 s5 XCHG\n                        -1 EQINT\n                        IF:<{\n                              1000 PUSHINT\n                              s5 PUSH\n                              500000000 PUSHINT\n                              LESS\n                              THROWANYIF\n                              s0 s4 XCHG\n                              500000000 PUSHINT\n                              SUB\n                              ACCEPT\n                              s0 s4 XCHG\n                        }>\n                        OVER\n                        0 GTINT\n                        IF:<{\n                              0 PUSHINT\n                              DUP\n                              16 PUSHINT\n                              NEWC\n                              6 STU\n                              s0 s6 XCHG2\n                              STSLICER\n                              s0 s3 XCHG2\n                              STGRAMS\n                              s1 s4 XCHG\n                              107 STU\n                              32 STU\n                              x{4D61726B6574706C61636520666565} PUSHSLICE\n                              STSLICER\n                              ENDC\n                              2 PUSHINT\n                              SENDRAWMSG\n                        }>ELSE<{\n                              s3 POP\n                              DROP\n                        }>\n                        OVER\n                        0 GTINT\n                        IF:<{\n                              0 PUSHINT\n                              DUP\n                              16 PUSHINT\n                              NEWC\n                              6 STU\n                              s0 s3 XCHG2\n                              STSLICER\n                              s0 s3 XCHG2\n                              STGRAMS\n                              107 STU\n                              32 STU\n                              x{526F79616C7479} PUSHSLICE\n                              STSLICER\n                              ENDC\n                              2 PUSHINT\n                              SENDRAWMSG\n                        }>ELSE<{\n                              2DROP\n                        }>\n                        DUP\n                        0 GTINT\n                        IF:<{\n                              0 PUSHINT\n                              DUP\n                              16 PUSHINT\n                              NEWC\n                              6 STU\n                              22 GETGLOB\n                              STSLICER\n                              s0 s3 XCHG2\n                              STGRAMS\n                              s1 s2 XCHG\n                              107 STU\n                              32 STU\n                              x{50726F666974} PUSHSLICE\n                              STSLICER\n                              ENDC\n                              2 PUSHINT\n                              SENDRAWMSG\n                        }>ELSE<{\n                              DROP\n                        }>\n                        0 PUSHINT\n                        DUP\n                        LTIME\n                        1607220500 PUSHINT\n                        NEWC\n                        32 STU\n                        64 STU\n                        12 GETGLOB\n                        STSLICER\n                        s0 s3 XCHG2\n                        STSLICER\n                        s1 s2 XCHG\n                        1 STU\n                        1 PUSHINT\n                        STGRAMS\n                        1 STU\n                        ENDC\n                        1 PUSHINT\n                        24 PUSHINT\n                        NEWC\n                        6 STU\n                        23 GETGLOB\n                        STSLICER\n                        0 PUSHINT\n                        STGRAMS\n                        107 STU\n                        STREF\n                        ENDC\n                        130 PUSHINT\n                        SENDRAWMSG\n                        -1 PUSHINT\n                        2 SETGLOB\n                        NOW\n                        16 SETGLOB\n                        CALL:<{\n                              8 GETGLOB\n                              7 GETGLOB\n                              21 GETGLOB\n                              20 GETGLOB\n                              19 GETGLOB\n                              18 GETGLOB\n                              15 GETGLOB\n                              16 GETGLOB\n                              14 GETGLOB\n                              6 GETGLOB\n                              2 GETGLOB\n                              NEWC\n                              1 STI\n                              1 STI\n                              12 GETGLOB\n                              STSLICER\n                              13 GETGLOB\n                              STGRAMS\n                              32 STU\n                              32 STU\n                              22 GETGLOB\n                              STSLICER\n                              64 STU\n                              32 STU\n                              32 STU\n                              32 STU\n                              32 STU\n                              STREF\n                              STREF\n                              ENDC\n                              c4 POP\n                        }>\n                  }>\n                  ACCEPT\n            }>\n            16 PUSHPOW2DEC\n            THROWANY\n      }>\n      0 => <{\n            SWAP\n            CTOS\n            4 LDU\n            SWAP\n            1 PUSHINT\n            AND\n            0 THROWIF\n            LDMSGADDR\n            DROP\n            CALL:<{\n                  1 GETGLOB\n                  ISNULL\n                  IFNOTRET\n                  c4 PUSH\n                  CTOS\n                  1 LDI\n                  SWAP\n                  2 SETGLOB\n                  1 LDI\n                  SWAP\n                  6 SETGLOB\n                  LDMSGADDR\n                  SWAP\n                  12 SETGLOB\n                  LDGRAMS\n                  SWAP\n                  13 SETGLOB\n                  32 LDU\n                  SWAP\n                  14 SETGLOB\n                  32 LDU\n                  SWAP\n                  16 SETGLOB\n                  LDMSGADDR\n                  SWAP\n                  22 SETGLOB\n                  64 LDU\n                  SWAP\n                  15 SETGLOB\n                  32 LDU\n                  SWAP\n                  18 SETGLOB\n                  32 LDU\n                  SWAP\n                  19 SETGLOB\n                  32 LDU\n                  SWAP\n                  20 SETGLOB\n                  32 LDU\n                  SWAP\n                  21 SETGLOB\n                  22 GETGLOB\n                  SBITS\n                  2 GTINT\n                  4 SETGLOB\n                  LDREF\n                  SWAP\n                  7 SETGLOB\n                  LDREF\n                  DROP\n                  8 SETGLOB\n                  8 GETGLOB\n                  CTOS\n                  LDMSGADDR\n                  SWAP\n                  3 SETGLOB\n                  LDGRAMS\n                  SWAP\n                  9 SETGLOB\n                  LDGRAMS\n                  SWAP\n                  10 SETGLOB\n                  7 LDU\n                  SWAP\n                  11 SETGLOB\n                  17 LDU\n                  SWAP\n                  17 SETGLOB\n                  LDMSGADDR\n                  SWAP\n                  23 SETGLOB\n                  32 LDU\n                  DROP\n                  5 SETGLOB\n                  -1 PUSHINT\n                  1 SETGLOB\n            }>\n            23 GETGLOB\n            s1 s(-1) PUXC\n            SDEQ\n            2 GETGLOB\n            0 EQINT\n            AND\n            IFJMP:<{\n                  s3 POP\n                  NIP\n                  CALL:<{\n                        NIP\n                        1001 PUSHINT\n                        22 GETGLOB\n                        SBITS\n                        2 GTINT\n                        THROWANYIF\n                        1002 PUSHINT\n                        SWAP\n                        32 LDU\n                        85167505 PUSHINT\n                        s1 s2 XCHG\n                        EQUAL\n                        s1 s2 XCHG\n                        THROWANYIFNOT\n                        64 PUSHINT\n                        SDSKIPFIRST\n                        LDMSGADDR\n                        DROP\n                        22 SETGLOB\n                        0 PUSHINT\n                        2 SETGLOB\n                        -1 PUSHINT\n                        4 SETGLOB\n                        CALL:<{\n                              8 GETGLOB\n                              7 GETGLOB\n                              21 GETGLOB\n                              20 GETGLOB\n                              19 GETGLOB\n                              18 GETGLOB\n                              15 GETGLOB\n                              16 GETGLOB\n                              14 GETGLOB\n                              6 GETGLOB\n                              2 GETGLOB\n                              NEWC\n                              1 STI\n                              1 STI\n                              12 GETGLOB\n                              STSLICER\n                              13 GETGLOB\n                              STGRAMS\n                              32 STU\n                              32 STU\n                              22 GETGLOB\n                              STSLICER\n                              64 STU\n                              32 STU\n                              32 STU\n                              32 STU\n                              32 STU\n                              STREF\n                              STREF\n                              ENDC\n                              c4 POP\n                        }>\n                  }>\n            }>\n            OVER\n            CALL:<{\n                  DUP\n                  SEMPTY\n                  -1 EQINT\n                  IFJMP:<{\n                        DROP\n                        0 PUSHINT\n                        DUP\n                  }>\n                  32 LDU\n                  0 PUSHINT\n                  x{63616E63656C} PUSHSLICE\n                  s2 PUSH\n                  SDEQ\n                  IFJMP:<{\n                        NIP\n                        1 PUSHINT\n                        s2 POP\n                  }>\n                  x{73746F70} PUSHSLICE\n                  s2 PUSH\n                  SDEQ\n                  IFJMP:<{\n                        NIP\n                        2 PUSHINT\n                        s2 POP\n                  }>\n                  x{66696E697368} PUSHSLICE\n                  s2 PUSH\n                  SDEQ\n                  IFJMP:<{\n                        NIP\n                        2 PUSHINT\n                        s2 POP\n                  }>\n                  x{6465706C6F79} PUSHSLICE\n                  s2 PUSH\n                  SDEQ\n                  IFJMP:<{\n                        NIP\n                        3 PUSHINT\n                        s2 POP\n                  }>\n                  OVER\n                  SBITS\n                  63 GTINT\n                  IF:<{\n                        DROP\n                        64 LDU\n                        DROP\n                  }>ELSE<{\n                        NIP\n                  }>\n            }>\n            OVER\n            555 PUSHINT\n            EQUAL\n            IFJMP:<{\n                  2DROP\n                  2 2 BLKDROP2\n                  1004 PUSHINT\n                  2 GETGLOB\n                  -1 EQINT\n                  4 GETGLOB\n                  0 EQINT\n                  OR\n                  THROWANYIFNOT\n                  3 GETGLOB\n                  SDEQ\n                  403 THROWIFNOT\n                  LDREF\n                  DROP\n                  CTOS\n                  8 LDU\n                  1012 PUSHINT\n                  s2 PUSH\n                  32 PUSHINT\n                  AND\n                  THROWANYIF\n                  600 PUSHINT\n                  1013 PUSHINT\n                  NOW\n                  16 GETGLOB\n                  s3 PUSH\n                  SUB\n                  GREATER\n                  NOW\n                  16 GETGLOB\n                  s4 PUSH\n                  ADD\n                  LESS\n                  AND\n                  THROWANYIF\n                  14 GETGLOB\n                  0 NEQINT\n                  IF:<{\n                        1013 PUSHINT\n                        NOW\n                        14 GETGLOB\n                        s3 PUSH\n                        SUB\n                        GREATER\n                        NOW\n                        14 GETGLOB\n                        s0 s4 XCHG2\n                        ADD\n                        s1 s3 XCHG\n                        LESS\n                        s1 s2 XCHG\n                        AND\n                        THROWANYIF\n                  }>ELSE<{\n                        DROP\n                  }>\n                  LDREF\n                  DROP\n                  SWAP\n                  SENDRAWMSG\n            }>\n            s3 POP\n            DUP\n            1 EQINT\n            IFJMP:<{\n                  DROP\n                  NIP\n                  s2 POP\n                  1005 PUSHINT\n                  NOW\n                  16 GETGLOB\n                  GEQ\n                  THROWANYIF\n                  1005 PUSHINT\n                  2 GETGLOB\n                  -1 EQINT\n                  THROWANYIF\n                  1015 PUSHINT\n                  4 GETGLOB\n                  0 EQINT\n                  THROWANYIF\n                  1008 PUSHINT\n                  SWAP\n                  100000000 PUSHINT\n                  LESS\n                  THROWANYIF\n                  1009 PUSHINT\n                  13 GETGLOB\n                  0 GTINT\n                  THROWANYIF\n                  22 GETGLOB\n                  s1 s(-1) PUXC\n                  SDEQ\n                  3 GETGLOB\n                  s2 s(-1) PUXC\n                  SDEQ\n                  OR\n                  403 THROWIFNOT\n                  CALL:<{\n                        0 PUSHINT\n                        DUP\n                        LTIME\n                        1607220500 PUSHINT\n                        NEWC\n                        32 STU\n                        64 STU\n                        22 GETGLOB\n                        STSLICER\n                        s0 s3 XCHG2\n                        STSLICER\n                        s1 s2 XCHG\n                        1 STU\n                        OVER\n                        STGRAMS\n                        1 STU\n                        ENDC\n                        1 PUSHINT\n                        24 PUSHINT\n                        NEWC\n                        6 STU\n                        23 GETGLOB\n                        STSLICER\n                        0 PUSHINT\n                        STGRAMS\n                        107 STU\n                        STREF\n                        ENDC\n                        130 PUSHINT\n                        SENDRAWMSG\n                        -1 PUSHINT\n                        2 SETGLOB\n                        -1 PUSHINT\n                        6 SETGLOB\n                        CALL:<{\n                              8 GETGLOB\n                              7 GETGLOB\n                              21 GETGLOB\n                              20 GETGLOB\n                              19 GETGLOB\n                              18 GETGLOB\n                              15 GETGLOB\n                              16 GETGLOB\n                              14 GETGLOB\n                              6 GETGLOB\n                              2 GETGLOB\n                              NEWC\n                              1 STI\n                              1 STI\n                              12 GETGLOB\n                              STSLICER\n                              13 GETGLOB\n                              STGRAMS\n                              32 STU\n                              32 STU\n                              22 GETGLOB\n                              STSLICER\n                              64 STU\n                              32 STU\n                              32 STU\n                              32 STU\n                              32 STU\n                              STREF\n                              STREF\n                              ENDC\n                              c4 POP\n                        }>\n                  }>\n            }>\n            DUP\n            2 EQINT\n            IFJMP:<{\n                  DROP\n                  NIP\n                  s2 POP\n                  1005 PUSHINT\n                  2 GETGLOB\n                  -1 EQINT\n                  THROWANYIF\n                  1015 PUSHINT\n                  4 GETGLOB\n                  0 EQINT\n                  THROWANYIF\n                  1008 PUSHINT\n                  SWAP\n                  100000000 PUSHINT\n                  LESS\n                  THROWANYIF\n                  1010 PUSHINT\n                  NOW\n                  16 GETGLOB\n                  LESS\n                  THROWANYIF\n                  22 GETGLOB\n                  s1 s(-1) PUXC\n                  SDEQ\n                  3 GETGLOB\n                  s2 s(-1) PUXC\n                  SDEQ\n                  OR\n                  12 GETGLOB\n                  s2 s(-1) PUXC\n                  SDEQ\n                  OR\n                  403 THROWIFNOT\n                  0 PUSHINT\n                  CALL:<{\n                        13 GETGLOB\n                        0 EQINT\n                        IFJMP:<{\n                              -1 EQINT\n                              IF:<{\n                                    BALANCE\n                                    2 UNTUPLE\n                                    DROP\n                                    1000 PUSHINT\n                                    SWAP\n                                    500000000 PUSHINT\n                                    LESS\n                                    THROWANYIF\n                                    ACCEPT\n                              }>\n                              CALL:<{\n                                    0 PUSHINT\n                                    DUP\n                                    LTIME\n                                    1607220500 PUSHINT\n                                    NEWC\n                                    32 STU\n                                    64 STU\n                                    22 GETGLOB\n                                    STSLICER\n                                    s0 s3 XCHG2\n                                    STSLICER\n                                    s1 s2 XCHG\n                                    1 STU\n                                    OVER\n                                    STGRAMS\n                                    1 STU\n                                    ENDC\n                                    1 PUSHINT\n                                    24 PUSHINT\n                                    NEWC\n                                    6 STU\n                                    23 GETGLOB\n                                    STSLICER\n                                    0 PUSHINT\n                                    STGRAMS\n                                    107 STU\n                                    STREF\n                                    ENDC\n                                    130 PUSHINT\n                                    SENDRAWMSG\n                                    -1 PUSHINT\n                                    2 SETGLOB\n                                    -1 PUSHINT\n                                    6 SETGLOB\n                                    CALL:<{\n                                          8 GETGLOB\n                                          7 GETGLOB\n                                          21 GETGLOB\n                                          20 GETGLOB\n                                          19 GETGLOB\n                                          18 GETGLOB\n                                          15 GETGLOB\n                                          16 GETGLOB\n                                          14 GETGLOB\n                                          6 GETGLOB\n                                          2 GETGLOB\n                                          NEWC\n                                          1 STI\n                                          1 STI\n                                          12 GETGLOB\n                                          STSLICER\n                                          13 GETGLOB\n                                          STGRAMS\n                                          32 STU\n                                          32 STU\n                                          22 GETGLOB\n                                          STSLICER\n                                          64 STU\n                                          32 STU\n                                          32 STU\n                                          32 STU\n                                          32 STU\n                                          STREF\n                                          STREF\n                                          ENDC\n                                          c4 POP\n                                    }>\n                              }>\n                        }>\n                        CALL:<{\n                              7 GETGLOB\n                              CTOS\n                              LDMSGADDR\n                              LDMSGADDR\n                              DROP\n                        }>\n                        13 GETGLOB\n                        18 GETGLOB\n                        19 GETGLOB\n                        3 CALLDICT\n                        13 GETGLOB\n                        20 GETGLOB\n                        21 GETGLOB\n                        3 CALLDICT\n                        13 GETGLOB\n                        s2 PUSH\n                        SUB\n                        OVER\n                        SUB\n                        s0 s5 XCHG\n                        -1 EQINT\n                        IF:<{\n                              1000 PUSHINT\n                              s5 PUSH\n                              500000000 PUSHINT\n                              LESS\n                              THROWANYIF\n                              s0 s4 XCHG\n                              500000000 PUSHINT\n                              SUB\n                              ACCEPT\n                              s0 s4 XCHG\n                        }>\n                        OVER\n                        0 GTINT\n                        IF:<{\n                              0 PUSHINT\n                              DUP\n                              16 PUSHINT\n                              NEWC\n                              6 STU\n                              s0 s6 XCHG2\n                              STSLICER\n                              s0 s3 XCHG2\n                              STGRAMS\n                              s1 s4 XCHG\n                              107 STU\n                              32 STU\n                              x{4D61726B6574706C61636520666565} PUSHSLICE\n                              STSLICER\n                              ENDC\n                              2 PUSHINT\n                              SENDRAWMSG\n                        }>ELSE<{\n                              s3 POP\n                              DROP\n                        }>\n                        OVER\n                        0 GTINT\n                        IF:<{\n                              0 PUSHINT\n                              DUP\n                              16 PUSHINT\n                              NEWC\n                              6 STU\n                              s0 s3 XCHG2\n                              STSLICER\n                              s0 s3 XCHG2\n                              STGRAMS\n                              107 STU\n                              32 STU\n                              x{526F79616C7479} PUSHSLICE\n                              STSLICER\n                              ENDC\n                              2 PUSHINT\n                              SENDRAWMSG\n                        }>ELSE<{\n                              2DROP\n                        }>\n                        DUP\n                        0 GTINT\n                        IF:<{\n                              0 PUSHINT\n                              DUP\n                              16 PUSHINT\n                              NEWC\n                              6 STU\n                              22 GETGLOB\n                              STSLICER\n                              s0 s3 XCHG2\n                              STGRAMS\n                              s1 s2 XCHG\n                              107 STU\n                              32 STU\n                              x{50726F666974} PUSHSLICE\n                              STSLICER\n                              ENDC\n                              2 PUSHINT\n                              SENDRAWMSG\n                        }>ELSE<{\n                              DROP\n                        }>\n                        0 PUSHINT\n                        DUP\n                        LTIME\n                        1607220500 PUSHINT\n                        NEWC\n                        32 STU\n                        64 STU\n                        12 GETGLOB\n                        STSLICER\n                        s0 s3 XCHG2\n                        STSLICER\n                        s1 s2 XCHG\n                        1 STU\n                        1 PUSHINT\n                        STGRAMS\n                        1 STU\n                        ENDC\n                        1 PUSHINT\n                        24 PUSHINT\n                        NEWC\n                        6 STU\n                        23 GETGLOB\n                        STSLICER\n                        0 PUSHINT\n                        STGRAMS\n                        107 STU\n                        STREF\n                        ENDC\n                        130 PUSHINT\n                        SENDRAWMSG\n                        -1 PUSHINT\n                        2 SETGLOB\n                        NOW\n                        16 SETGLOB\n                        CALL:<{\n                              8 GETGLOB\n                              7 GETGLOB\n                              21 GETGLOB\n                              20 GETGLOB\n                              19 GETGLOB\n                              18 GETGLOB\n                              15 GETGLOB\n                              16 GETGLOB\n                              14 GETGLOB\n                              6 GETGLOB\n                              2 GETGLOB\n                              NEWC\n                              1 STI\n                              1 STI\n                              12 GETGLOB\n                              STSLICER\n                              13 GETGLOB\n                              STGRAMS\n                              32 STU\n                              32 STU\n                              22 GETGLOB\n                              STSLICER\n                              64 STU\n                              32 STU\n                              32 STU\n                              32 STU\n                              32 STU\n                              STREF\n                              STREF\n                              ENDC\n                              c4 POP\n                        }>\n                  }>\n            }>\n            3 EQINT\n            IFJMP:<{\n                  4 BLKDROP\n            }>\n            4 GETGLOB\n            0 EQINT\n            IFJMP:<{\n                  4 BLKDROP\n                  1015 PUSHINT\n                  THROWANY\n            }>\n            2 GETGLOB\n            -1 EQINT\n            NOW\n            16 GETGLOB\n            GEQ\n            OR\n            IFJMP:<{\n                  4 BLKDROP\n                  1005 PUSHINT\n                  THROWANY\n            }>\n            18 GETGLOB\n            19 GETGLOB\n            20 GETGLOB\n            21 GETGLOB\n            4 CALLDICT\n            1011 PUSHINT\n            SWAP\n            0 EQINT\n            THROWANYIF\n            16 GETGLOB\n            NOW\n            SUB\n            1014 PUSHINT\n            SWAP\n            1728000 PUSHINT\n            GREATER\n            THROWANYIF\n            10 GETGLOB\n            100000000 PUSHINT\n            ADD\n            s3 s(-1) PUXC\n            GEQ\n            10 GETGLOB\n            0 GTINT\n            AND\n            IFJMP:<{\n                  s2 POP\n                  s0 s2 XCHG\n                  CALL:<{\n                        13 GETGLOB\n                        1 LESSINT\n                        IFJMP:<{\n                              DROP\n                        }>\n                        13 GETGLOB\n                        5577000 PUSHINT\n                        SUB\n                        OVER\n                        10000000 PUSHINT\n                        SUB\n                        s1 s(-1) PUXC\n                        GREATER\n                        IF:<{\n                              DROP\n                              10000000 PUSHINT\n                              SUB\n                        }>ELSE<{\n                              NIP\n                        }>\n                        DUP\n                        0 GTINT\n                        IF:<{\n                              x{596F75722062696420686173206265656E206F757462696420627920616E6F7468657220757365722E} PUSHSLICE\n                              0 PUSHINT\n                              DUP\n                              24 PUSHINT\n                              NEWC\n                              6 STU\n                              12 GETGLOB\n                              STSLICER\n                              s0 s4 XCHG2\n                              STGRAMS\n                              s1 s3 XCHG\n                              107 STU\n                              s1 s2 XCHG\n                              32 STU\n                              SWAP\n                              STSLICER\n                              ENDC\n                              2 PUSHINT\n                              SENDRAWMSG\n                        }>ELSE<{\n                              DROP\n                        }>\n                  }>\n                  DUP\n                  12 SETGLOB\n                  10 GETGLOB\n                  13 SETGLOB\n                  NOW\n                  14 SETGLOB\n                  SWAP\n                  15 SETGLOB\n                  0 PUSHINT\n                  CALL:<{\n                        13 GETGLOB\n                        0 EQINT\n                        IFJMP:<{\n                              -1 EQINT\n                              IF:<{\n                                    BALANCE\n                                    2 UNTUPLE\n                                    DROP\n                                    1000 PUSHINT\n                                    SWAP\n                                    500000000 PUSHINT\n                                    LESS\n                                    THROWANYIF\n                                    ACCEPT\n                              }>\n                              CALL:<{\n                                    0 PUSHINT\n                                    DUP\n                                    LTIME\n                                    1607220500 PUSHINT\n                                    NEWC\n                                    32 STU\n                                    64 STU\n                                    22 GETGLOB\n                                    STSLICER\n                                    s0 s3 XCHG2\n                                    STSLICER\n                                    s1 s2 XCHG\n                                    1 STU\n                                    OVER\n                                    STGRAMS\n                                    1 STU\n                                    ENDC\n                                    1 PUSHINT\n                                    24 PUSHINT\n                                    NEWC\n                                    6 STU\n                                    23 GETGLOB\n                                    STSLICER\n                                    0 PUSHINT\n                                    STGRAMS\n                                    107 STU\n                                    STREF\n                                    ENDC\n                                    130 PUSHINT\n                                    SENDRAWMSG\n                                    -1 PUSHINT\n                                    2 SETGLOB\n                                    -1 PUSHINT\n                                    6 SETGLOB\n                                    CALL:<{\n                                          8 GETGLOB\n                                          7 GETGLOB\n                                          21 GETGLOB\n                                          20 GETGLOB\n                                          19 GETGLOB\n                                          18 GETGLOB\n                                          15 GETGLOB\n                                          16 GETGLOB\n                                          14 GETGLOB\n                                          6 GETGLOB\n                                          2 GETGLOB\n                                          NEWC\n                                          1 STI\n                                          1 STI\n                                          12 GETGLOB\n                                          STSLICER\n                                          13 GETGLOB\n                                          STGRAMS\n                                          32 STU\n                                          32 STU\n                                          22 GETGLOB\n                                          STSLICER\n                                          64 STU\n                                          32 STU\n                                          32 STU\n                                          32 STU\n                                          32 STU\n                                          STREF\n                                          STREF\n                                          ENDC\n                                          c4 POP\n                                    }>\n                              }>\n                        }>\n                        CALL:<{\n                              7 GETGLOB\n                              CTOS\n                              LDMSGADDR\n                              LDMSGADDR\n                              DROP\n                        }>\n                        13 GETGLOB\n                        18 GETGLOB\n                        19 GETGLOB\n                        3 CALLDICT\n                        13 GETGLOB\n                        20 GETGLOB\n                        21 GETGLOB\n                        3 CALLDICT\n                        13 GETGLOB\n                        s2 PUSH\n                        SUB\n                        OVER\n                        SUB\n                        s0 s5 XCHG\n                        -1 EQINT\n                        IF:<{\n                              1000 PUSHINT\n                              s5 PUSH\n                              500000000 PUSHINT\n                              LESS\n                              THROWANYIF\n                              s0 s4 XCHG\n                              500000000 PUSHINT\n                              SUB\n                              ACCEPT\n                              s0 s4 XCHG\n                        }>\n                        OVER\n                        0 GTINT\n                        IF:<{\n                              0 PUSHINT\n                              DUP\n                              16 PUSHINT\n                              NEWC\n                              6 STU\n                              s0 s6 XCHG2\n                              STSLICER\n                              s0 s3 XCHG2\n                              STGRAMS\n                              s1 s4 XCHG\n                              107 STU\n                              32 STU\n                              x{4D61726B6574706C61636520666565} PUSHSLICE\n                              STSLICER\n                              ENDC\n                              2 PUSHINT\n                              SENDRAWMSG\n                        }>ELSE<{\n                              s3 POP\n                              DROP\n                        }>\n                        OVER\n                        0 GTINT\n                        IF:<{\n                              0 PUSHINT\n                              DUP\n                              16 PUSHINT\n                              NEWC\n                              6 STU\n                              s0 s3 XCHG2\n                              STSLICER\n                              s0 s3 XCHG2\n                              STGRAMS\n                              107 STU\n                              32 STU\n                              x{526F79616C7479} PUSHSLICE\n                              STSLICER\n                              ENDC\n                              2 PUSHINT\n                              SENDRAWMSG\n                        }>ELSE<{\n                              2DROP\n                        }>\n                        DUP\n                        0 GTINT\n                        IF:<{\n                              0 PUSHINT\n                              DUP\n                              16 PUSHINT\n                              NEWC\n                              6 STU\n                              22 GETGLOB\n                              STSLICER\n                              s0 s3 XCHG2\n                              STGRAMS\n                              s1 s2 XCHG\n                              107 STU\n                              32 STU\n                              x{50726F666974} PUSHSLICE\n                              STSLICER\n                              ENDC\n                              2 PUSHINT\n                              SENDRAWMSG\n                        }>ELSE<{\n                              DROP\n                        }>\n                        0 PUSHINT\n                        DUP\n                        LTIME\n                        1607220500 PUSHINT\n                        NEWC\n                        32 STU\n                        64 STU\n                        12 GETGLOB\n                        STSLICER\n                        s0 s3 XCHG2\n                        STSLICER\n                        s1 s2 XCHG\n                        1 STU\n                        1 PUSHINT\n                        STGRAMS\n                        1 STU\n                        ENDC\n                        1 PUSHINT\n                        24 PUSHINT\n                        NEWC\n                        6 STU\n                        23 GETGLOB\n                        STSLICER\n                        0 PUSHINT\n                        STGRAMS\n                        107 STU\n                        STREF\n                        ENDC\n                        130 PUSHINT\n                        SENDRAWMSG\n                        -1 PUSHINT\n                        2 SETGLOB\n                        NOW\n                        16 SETGLOB\n                        CALL:<{\n                              8 GETGLOB\n                              7 GETGLOB\n                              21 GETGLOB\n                              20 GETGLOB\n                              19 GETGLOB\n                              18 GETGLOB\n                              15 GETGLOB\n                              16 GETGLOB\n                              14 GETGLOB\n                              6 GETGLOB\n                              2 GETGLOB\n                              NEWC\n                              1 STI\n                              1 STI\n                              12 GETGLOB\n                              STSLICER\n                              13 GETGLOB\n                              STGRAMS\n                              32 STU\n                              32 STU\n                              22 GETGLOB\n                              STSLICER\n                              64 STU\n                              32 STU\n                              32 STU\n                              32 STU\n                              32 STU\n                              STREF\n                              STREF\n                              ENDC\n                              c4 POP\n                        }>\n                  }>\n            }>\n            16 GETGLOB\n            17 GETGLOB\n            SUB\n            NOW\n            LESS\n            IF:<{\n                  16 GETGLOB\n                  17 GETGLOB\n                  ADD\n                  16 SETGLOB\n            }>\n            13 GETGLOB\n            IFNOTJMP:<{\n                  s3 POP\n                  1000 PUSHINT\n                  9 GETGLOB\n                  s3 s(-1) PUXC\n                  LESS\n                  THROWANYIF\n                  SWAP\n                  13 SETGLOB\n                  SWAP\n                  12 SETGLOB\n                  NOW\n                  14 SETGLOB\n                  15 SETGLOB\n                  CALL:<{\n                        8 GETGLOB\n                        7 GETGLOB\n                        21 GETGLOB\n                        20 GETGLOB\n                        19 GETGLOB\n                        18 GETGLOB\n                        15 GETGLOB\n                        16 GETGLOB\n                        14 GETGLOB\n                        6 GETGLOB\n                        2 GETGLOB\n                        NEWC\n                        1 STI\n                        1 STI\n                        12 GETGLOB\n                        STSLICER\n                        13 GETGLOB\n                        STGRAMS\n                        32 STU\n                        32 STU\n                        22 GETGLOB\n                        STSLICER\n                        64 STU\n                        32 STU\n                        32 STU\n                        32 STU\n                        32 STU\n                        STREF\n                        STREF\n                        ENDC\n                        c4 POP\n                  }>\n            }>\n            13 CALLDICT\n            s3 s(-1) PUXC\n            LESS\n            IFJMP:<{\n                  4 BLKDROP\n                  1000 PUSHINT\n                  THROWANY\n            }>\n            s0 s3 XCHG\n            CALL:<{\n                  13 GETGLOB\n                  1 LESSINT\n                  IFJMP:<{\n                        DROP\n                  }>\n                  13 GETGLOB\n                  5577000 PUSHINT\n                  SUB\n                  OVER\n                  10000000 PUSHINT\n                  SUB\n                  s1 s(-1) PUXC\n                  GREATER\n                  IF:<{\n                        DROP\n                        10000000 PUSHINT\n                        SUB\n                  }>ELSE<{\n                        NIP\n                  }>\n                  DUP\n                  0 GTINT\n                  IF:<{\n                        x{596F75722062696420686173206265656E206F757462696420627920616E6F7468657220757365722E} PUSHSLICE\n                        0 PUSHINT\n                        DUP\n                        24 PUSHINT\n                        NEWC\n                        6 STU\n                        12 GETGLOB\n                        STSLICER\n                        s0 s4 XCHG2\n                        STGRAMS\n                        s1 s3 XCHG\n                        107 STU\n                        s1 s2 XCHG\n                        32 STU\n                        SWAP\n                        STSLICER\n                        ENDC\n                        2 PUSHINT\n                        SENDRAWMSG\n                  }>ELSE<{\n                        DROP\n                  }>\n            }>\n            s0 s2 XCHG\n            12 SETGLOB\n            13 SETGLOB\n            NOW\n            14 SETGLOB\n            15 SETGLOB\n            CALL:<{\n                  8 GETGLOB\n                  7 GETGLOB\n                  21 GETGLOB\n                  20 GETGLOB\n                  19 GETGLOB\n                  18 GETGLOB\n                  15 GETGLOB\n                  16 GETGLOB\n                  14 GETGLOB\n                  6 GETGLOB\n                  2 GETGLOB\n                  NEWC\n                  1 STI\n                  1 STI\n                  12 GETGLOB\n                  STSLICER\n                  13 GETGLOB\n                  STGRAMS\n                  32 STU\n                  32 STU\n                  22 GETGLOB\n                  STSLICER\n                  64 STU\n                  32 STU\n                  32 STU\n                  32 STU\n                  32 STU\n                  STREF\n                  STREF\n                  ENDC\n                  c4 POP\n            }>\n      }>\n      1 => <{\n            1000000000 PUSHINT\n            SWAP\n            MULDIV\n      }>\n      2 => <{\n            1000000000 PUSHINT\n            MULDIV\n      }>\n      3 => <{\n            DUP\n            0 EQINT\n            IFJMP:<{\n                  3 BLKDROP\n                  0 PUSHINT\n            }>\n            ROTREV\n            2 CALLDICT\n            SWAP\n            1 CALLDICT\n      }>\n      4 => <{\n            1000000000 PUSHINT\n            s0 s1 s3 XCPUXC\n            s1 s5 XCHG\n            3 CALLDICT\n            s3 s(-1) s2 PUXC2\n            3 CALLDICT\n            ROTREV\n            SUB\n            SWAP\n            SUB\n            1 LESSINT\n            IFJMP:<{\n                  0 PUSHINT\n            }>\n            1 PUSHINT\n      }>\n      13 => <{\n            13 GETGLOB\n            100000000 PUSHINT\n            ADD\n            13 GETGLOB\n            11 GETGLOB\n            100 ADDINT\n            100 PUSHINT\n            3 CALLDICT\n            MAX\n      }>\n      72748 => <{\n            CALL:<{\n                  1 GETGLOB\n                  ISNULL\n                  IFNOTRET\n                  c4 PUSH\n                  CTOS\n                  1 LDI\n                  SWAP\n                  2 SETGLOB\n                  1 LDI\n                  SWAP\n                  6 SETGLOB\n                  LDMSGADDR\n                  SWAP\n                  12 SETGLOB\n                  LDGRAMS\n                  SWAP\n                  13 SETGLOB\n                  32 LDU\n                  SWAP\n                  14 SETGLOB\n                  32 LDU\n                  SWAP\n                  16 SETGLOB\n                  LDMSGADDR\n                  SWAP\n                  22 SETGLOB\n                  64 LDU\n                  SWAP\n                  15 SETGLOB\n                  32 LDU\n                  SWAP\n                  18 SETGLOB\n                  32 LDU\n                  SWAP\n                  19 SETGLOB\n                  32 LDU\n                  SWAP\n                  20 SETGLOB\n                  32 LDU\n                  SWAP\n                  21 SETGLOB\n                  22 GETGLOB\n                  SBITS\n                  2 GTINT\n                  4 SETGLOB\n                  LDREF\n                  SWAP\n                  7 SETGLOB\n                  LDREF\n                  DROP\n                  8 SETGLOB\n                  8 GETGLOB\n                  CTOS\n                  LDMSGADDR\n                  SWAP\n                  3 SETGLOB\n                  LDGRAMS\n                  SWAP\n                  9 SETGLOB\n                  LDGRAMS\n                  SWAP\n                  10 SETGLOB\n                  7 LDU\n                  SWAP\n                  11 SETGLOB\n                  17 LDU\n                  SWAP\n                  17 SETGLOB\n                  LDMSGADDR\n                  SWAP\n                  23 SETGLOB\n                  32 LDU\n                  DROP\n                  5 SETGLOB\n                  -1 PUSHINT\n                  1 SETGLOB\n            }>\n            CALL:<{\n                  7 GETGLOB\n                  CTOS\n                  LDMSGADDR\n                  LDMSGADDR\n                  DROP\n            }>\n            18 GETGLOB\n            19 GETGLOB\n            20 GETGLOB\n            21 GETGLOB\n            4 CALLDICT\n            1011 PUSHINT\n            SWAP\n            0 EQINT\n            THROWANYIF\n            4281667 PUSHINT\n            2 GETGLOB\n            16 GETGLOB\n            3 GETGLOB\n            23 GETGLOB\n            22 GETGLOB\n            13 GETGLOB\n            12 GETGLOB\n            11 GETGLOB\n            18 GETGLOB\n            19 GETGLOB\n            20 GETGLOB\n            21 GETGLOB\n            10 GETGLOB\n            9 GETGLOB\n            5 GETGLOB\n            14 GETGLOB\n            6 GETGLOB\n            s0 s17 XCHG\n            s0 s19 XCHG\n            s0 s17 XCHG\n            s0 s16 XCHG\n            s0 s18 XCHG\n            s0 s16 XCHG\n            s0 s15 XCHG\n            s0 s17 XCHG\n            s0 s15 XCHG\n            s0 s14 XCHG\n            s0 s16 XCHG\n            s0 s14 XCHG\n            s13 s15 XCHG\n            s12 s14 XCHG\n            s11 s13 XCHG\n            s10 s12 XCHG\n            s9 s11 XCHG\n            s9 s10 XCHG\n            s8 s9 XCHG\n            s7 s8 XCHG\n      }>\n      109137 => <{\n            CALL:<{\n                  1 GETGLOB\n                  ISNULL\n                  IFNOTRET\n                  c4 PUSH\n                  CTOS\n                  1 LDI\n                  SWAP\n                  2 SETGLOB\n                  1 LDI\n                  SWAP\n                  6 SETGLOB\n                  LDMSGADDR\n                  SWAP\n                  12 SETGLOB\n                  LDGRAMS\n                  SWAP\n                  13 SETGLOB\n                  32 LDU\n                  SWAP\n                  14 SETGLOB\n                  32 LDU\n                  SWAP\n                  16 SETGLOB\n                  LDMSGADDR\n                  SWAP\n                  22 SETGLOB\n                  64 LDU\n                  SWAP\n                  15 SETGLOB\n                  32 LDU\n                  SWAP\n                  18 SETGLOB\n                  32 LDU\n                  SWAP\n                  19 SETGLOB\n                  32 LDU\n                  SWAP\n                  20 SETGLOB\n                  32 LDU\n                  SWAP\n                  21 SETGLOB\n                  22 GETGLOB\n                  SBITS\n                  2 GTINT\n                  4 SETGLOB\n                  LDREF\n                  SWAP\n                  7 SETGLOB\n                  LDREF\n                  DROP\n                  8 SETGLOB\n                  8 GETGLOB\n                  CTOS\n                  LDMSGADDR\n                  SWAP\n                  3 SETGLOB\n                  LDGRAMS\n                  SWAP\n                  9 SETGLOB\n                  LDGRAMS\n                  SWAP\n                  10 SETGLOB\n                  7 LDU\n                  SWAP\n                  11 SETGLOB\n                  17 LDU\n                  SWAP\n                  17 SETGLOB\n                  LDMSGADDR\n                  SWAP\n                  23 SETGLOB\n                  32 LDU\n                  DROP\n                  5 SETGLOB\n                  -1 PUSHINT\n                  1 SETGLOB\n            }>\n            CALL:<{\n                  7 GETGLOB\n                  CTOS\n                  LDMSGADDR\n                  LDMSGADDR\n                  DROP\n            }>\n            18 GETGLOB\n            19 GETGLOB\n            20 GETGLOB\n            21 GETGLOB\n            4 CALLDICT\n            1011 PUSHINT\n            SWAP\n            0 EQINT\n            THROWANYIF\n            13 GETGLOB\n            0 GTINT\n            IF:<{\n                  13 CALLDICT\n                  9 SETGLOB\n            }>\n            4 GETGLOB\n            2 GETGLOB\n            16 GETGLOB\n            3 GETGLOB\n            23 GETGLOB\n            22 GETGLOB\n            13 GETGLOB\n            12 GETGLOB\n            11 GETGLOB\n            18 GETGLOB\n            19 GETGLOB\n            20 GETGLOB\n            21 GETGLOB\n            10 GETGLOB\n            9 GETGLOB\n            5 GETGLOB\n            14 GETGLOB\n            6 GETGLOB\n            17 GETGLOB\n            15 GETGLOB\n            s0 s19 XCHG\n            s0 s21 XCHG\n            s0 s19 XCHG\n            s0 s18 XCHG\n            s0 s20 XCHG\n            s0 s18 XCHG\n            s0 s17 XCHG\n            s0 s19 XCHG\n            s0 s17 XCHG\n            s0 s16 XCHG\n            s0 s18 XCHG\n            s0 s16 XCHG\n            s0 s15 XCHG\n            s0 s17 XCHG\n            s0 s15 XCHG\n            s0 s14 XCHG\n            s0 s16 XCHG\n            s0 s14 XCHG\n            s13 s15 XCHG\n            s12 s14 XCHG\n            s11 s13 XCHG\n            s11 s12 XCHG\n            s10 s11 XCHG\n            s9 s10 XCHG\n      }>\n}\n11 THROWARG",
  "code_hash": "bb6f62ade0feb2d79fab3b8aebf0930af98553df60093b2027f0a8bf169bfcec",
  "methods": [
    {
      "id": 72748,
      "method": "get_sale_data"
    }
  ],
  "compiler": "func",
  "source": {
    "files": [
      {
        "name": "nft-auction-v3r3.func",
        "content": "#include \"../stdlib.fc\";\n#include \"struct/op-codes.func\";\n#include \"struct/exit-codes.func\";\n#include \"struct/math.func\";\n#include \"struct/msg-utils.func\";\n\n;;\n;; see https://github.com/getgems-io/nft-contracts\n;;\n\n;;\n;;  persistant and runtime storage description\n;;\n\nglobal int      init?; ;; init_data safe check\nglobal int      end?; ;; end auction or not\nglobal slice    mp_addr; ;; the address of the marketplace from which the contract is deployed\nglobal int      activated?; ;; contract is activated by external message or by nft transfer\nglobal int      created_at?; ;; timestamp of created acution\nglobal int      is_canceled?; ;; auction was cancelled by owner\n\nglobal cell fees_cell;\nglobal cell constant_cell;\n\n;; bids info cell (ref)\nglobal int      min_bid; ;; minimal bid\nglobal int      max_bid; ;; maximum bid\nglobal int      min_step; ;; minimum step (can be 0)\nglobal slice    last_member; ;; last member address\nglobal int      last_bid; ;; last bid amount\nglobal int      last_bid_at; ;; timestamp of last bid\nglobal int      last_query_id; ;; last processed query id\nglobal int      end_time; ;; unix end time\nglobal int      step_time; ;; by how much the time increases with the new bid (e.g. 30)\nglobal int      mp_fee_factor;\nglobal int      mp_fee_base;\nglobal int      royalty_fee_factor;\nglobal int      royalty_fee_base;\n\n;; nft info cell (ref)\nglobal slice    nft_owner; ;; nft owner addres (should be sent nft if auction canceled or money from auction)\nglobal slice    nft_addr; ;; nft address\n\n() pack_data() impure inline_ref {\n  set_data(\n    begin_cell()\n    .store_int(end?, 1) ;; + stc    1\n    .store_int(is_canceled?, 1) ;; 1\n    .store_slice(last_member) ;; + max    267 ($10 with Anycast = 0)\n    .store_coins(last_bid) ;; + max    124\n    .store_uint(last_bid_at, 32) ;; + stc    32\n    .store_uint(end_time, 32) ;; + stc    32\n    .store_slice(nft_owner) ;; 267\n    .store_uint(last_query_id, 64)\n    .store_uint(mp_fee_factor, 32)\n    .store_uint(mp_fee_base, 32)\n    .store_uint(royalty_fee_factor, 32)\n    .store_uint(royalty_fee_base, 32)\n    .store_ref(fees_cell) ;; + ref\n    .store_ref(constant_cell) ;; + ref\n    .end_cell() ;; total 267 + 124 + 32 + 32 + 267 + 1 + 1 + 1 + 64 = 789\n  );\n}\n\n(slice, slice) get_fees_addresses() inline_ref {\n  slice fees = fees_cell.begin_parse();\n  slice mp_fee_addr = fees~load_msg_addr();\n  slice royalty_fee_addr = fees~load_msg_addr();\n  return (\n    mp_fee_addr,\n    royalty_fee_addr\n  );\n}\n\n() init_data() impure inline_ref {- save for get methods -} {\n  ifnot(null?(init?)) { return ();}\n\n  slice ds = get_data().begin_parse();\n  end? = ds~load_int(1);\n  is_canceled? = ds~load_int(1);\n  last_member = ds~load_msg_addr();\n  last_bid = ds~load_coins();\n  last_bid_at = ds~load_uint(32);\n  end_time = ds~load_uint(32);\n  nft_owner = ds~load_msg_addr();\n  last_query_id = ds~load_uint(64);\n  mp_fee_factor = ds~load_uint(32);\n  mp_fee_base = ds~load_uint(32);\n  royalty_fee_factor = ds~load_uint(32);\n  royalty_fee_base = ds~load_uint(32);\n  activated? = nft_owner.slice_bits() > 2;\n\n  fees_cell = ds~load_ref();\n  constant_cell = ds~load_ref();\n  slice constants = constant_cell.begin_parse();\n  mp_addr = constants~load_msg_addr();\n  min_bid = constants~load_coins();\n  max_bid = constants~load_coins();\n  min_step = constants~load_uint(7);\n  step_time = constants~load_uint(17);\n  nft_addr = constants~load_msg_addr();\n  created_at? = constants~load_uint(32);\n\n  init? = true;\n}\n\n{-\n    SHOULD\n    [+] check init auction or not\n    [+] check op\n    [+] change nft owner\n    [+] change auction status\n-}\n() handle::try_init_auction(slice sender_addr, slice in_msg_body) impure inline_ref {\n  throw_if(exit::auction_init(), nft_owner.slice_bits() > 2); ;; throw if auction already init\n  throw_unless(exit::no_transfer(), in_msg_body~load_uint(32) == op::ownership_assigned()); ;; throw if it`s not ownership assigned\n  in_msg_body~skip_bits(64); ;; query id\n  nft_owner = in_msg_body~load_msg_addr();\n  end? = false;\n  activated? = true;\n  pack_data();\n}\n\n\n() handle::cancel(slice sender_addr) impure inline_ref {\n  builder nft_transfer_body = begin_cell()\n  .store_uint(op::transfer(), 32)\n  .store_uint(cur_lt(), 64) ;; query id\n  .store_slice(nft_owner) ;; return nft no creator\n  .store_slice(sender_addr) ;; response_destination\n  .store_uint(0, 1) ;; custom payload\n  .store_coins(0) ;; forward amount\n  .store_uint(0, 1); ;; forward payload\n\n  builder nft_return_msg = begin_cell()\n  .store_uint(0x18, 6)\n  .store_slice(nft_addr)\n  .store_coins(0)\n  .store_uint(1, 1 + 4 + 4 + 64 + 32 + 1 + 1)\n  .store_ref(nft_transfer_body.end_cell());\n\n  send_raw_message(nft_return_msg.end_cell(), 130);\n  end? = true;\n  is_canceled? = true;\n  pack_data();\n}\n\n() handle::end_auction(slice sender_addr, int from_external) impure inline_ref {\n  if (last_bid == 0) { ;; just return nft\n    if (from_external == true) {\n      [int my_balance, _] = get_balance();\n      throw_if(exit::low_bid(), my_balance < 500000000); ;; 0.5 ton\n      accept_message();\n    }\n    handle::cancel(sender_addr);\n    return ();\n  }\n\n  var (\n    mp_fee_addr,\n    royalty_fee_addr\n  ) = get_fees_addresses();\n\n  int mp_fee = math::get_percent(last_bid, mp_fee_factor, mp_fee_base);\n  int royalty_fee = math::get_percent(last_bid, royalty_fee_factor, royalty_fee_base);\n  int profit = last_bid - mp_fee - royalty_fee;\n  if (from_external == true) {\n    ;; if profit less 0.5 TON then prevent end auc by external message\n    throw_if(exit::low_bid(), profit < 500000000);\n    ;; we will send 0.5 ton to nft\n    ;; and it returns to nft_owner\n    ;; because when from_external == true sender_addr should be nft_owner\n    profit = profit - 500000000;\n    accept_message();\n  }\n\n  if (mp_fee > 0) {\n    builder mp_transfer = begin_cell()\n    .store_uint(0x10, 6) ;; 0 (int_msg_info) 1 (ihr_disabled) 1 (no bounces) 00 (address)\n    .store_slice(mp_fee_addr)\n    .store_coins(mp_fee)\n    .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)\n    .store_uint(0, 32)\n    .store_slice(msg::mp_msg());\n\n    send_raw_message(mp_transfer.end_cell(), 2);\n  }\n\n\n\n  if (royalty_fee > 0) {\n    builder royalty_transfer = begin_cell()\n    .store_uint(0x10, 6) ;; 0 (int_msg_info) 1 (ihr_disabled) 1 (no bounces) 00 (address)\n    .store_slice(royalty_fee_addr)\n    .store_coins(royalty_fee)\n    .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)\n    .store_uint(0, 32)\n    .store_slice(msg::royalty_msg());\n\n    send_raw_message(royalty_transfer.end_cell(), 2);\n  }\n\n  if (profit > 0) {\n    builder prev_owner_msg = begin_cell()\n    .store_uint(0x10, 6) ;; 0 (int_msg_info) 1 (ihr_disabled) 1 (no bounces) 00 (address)\n    .store_slice(nft_owner)\n    .store_coins(profit)\n    .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)\n    .store_uint(0, 32)\n    .store_slice(msg::profit_msg());\n\n    send_raw_message(prev_owner_msg.end_cell(), 2);\n  }\n\n  builder nft_transfer_body = begin_cell()\n  .store_uint(op::transfer(), 32)\n  .store_uint(cur_lt(), 64) ;; query id\n  .store_slice(last_member) ;; new owner\n  .store_slice(sender_addr) ;; response_destination\n  .store_uint(0, 1) ;; custom payload\n  .store_coins(1) ;; forward amount  1 nano ton\n  .store_uint(0, 1); ;; forward payload\n  builder nft_transfer = begin_cell()\n  .store_uint(0x18, 6)\n  .store_slice(nft_addr)\n  .store_coins(0)\n  .store_uint(1, 1 + 4 + 4 + 64 + 32 + 1 + 1)\n  .store_ref(nft_transfer_body.end_cell());\n  send_raw_message(nft_transfer.end_cell(), 130); ;; 128 +2 for ignoring errors\n  end? = true;\n  end_time = now();\n  pack_data();\n}\n\n;;\n;;  main code\n;;\n\n() return_last_bid(int my_balance) impure inline_ref {\n  if (last_bid <= 0) {\n    return ();\n  }\n  int return_bid_amount = last_bid - 5577000; ;; 0,005577 TON magic gas price per bid processing\n  if (return_bid_amount > (my_balance - 10000000)) { ;; - 0.01 TON\n    return_bid_amount = my_balance - 10000000;\n  }\n  if (return_bid_amount > 0) {\n    slice msg = msg::bid_return();\n    builder return_prev_bid = begin_cell()\n    .store_uint(0x18, 6)\n    .store_slice(last_member)\n    .store_coins(return_bid_amount)\n    .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)\n    .store_uint(0, 32)\n    .store_slice(msg);\n\n    send_raw_message(return_prev_bid.end_cell(), 2);\n  }\n}\n\n(int,int) get_command_code(slice s) inline_ref {\n  if (slice_empty?(s) == true) {\n    return (0,0);\n  }\n\n  int op = s~load_uint(32);\n  int query_id = 0;\n  if (equal_slices(msg::cancel_msg(), s)) {\n    return (1,query_id);\n  } elseif (equal_slices(msg::stop_msg(), s)) {\n    return (2,query_id);\n  } elseif (equal_slices(msg::finish_msg(), s)) {\n    return (2,query_id); ;; 2 its ok\n  } elseif (equal_slices(msg::deploy(), s)) {\n    return (3,query_id);\n  } else {\n    if (slice_bits(s) >= 64) {\n      query_id = s~load_uint(64);\n    }\n    return (op,query_id); ;; return op if it's not a message\n  }\n}\n\nint get_next_min_bid() {\n  return max(\n    last_bid + 100000000,\n    math::get_percent(last_bid, 100 + min_step, 100)\n  );\n}\n\n() recv_internal(int my_balance, int msg_value, cell in_msg_cell, slice in_msg_body) impure {\n  slice cs = in_msg_cell.begin_parse();\n  throw_if(0, cs~load_uint(4) & 1);\n\n  slice sender_addr = cs~load_msg_addr();\n  init_data();\n\n  if (equal_slices(sender_addr, nft_addr) & (end? == false)) {\n    handle::try_init_auction(sender_addr, in_msg_body);\n    return ();\n  }\n\n  var (op, query_id) = get_command_code(in_msg_body);\n\n  if (op == 555) {\n    throw_unless(exit::not_cancel(), ((end? == true) | (activated? == false)));\n    throw_unless(403, equal_slices(sender_addr, mp_addr));\n    ;; way to fix unexpected troubles with auction contract\n    ;; for example if some one transfer nft to this contract\n    var msg = in_msg_body~load_ref().begin_parse();\n    var mode = msg~load_uint(8);\n    throw_if(exit::bad_mode(), mode & 32);\n\n    int ten_min = 10 * 60;\n    throw_if(exit::last_bid_too_close(), (now() > (end_time - ten_min)) & (now() < (end_time + ten_min)));\n    if (last_bid_at != 0 ) {\n      throw_if(exit::last_bid_too_close(), (now() > (last_bid_at - ten_min)) & (now() < (last_bid_at + ten_min)));\n    }\n\n    send_raw_message(msg~load_ref(), mode);\n    return ();\n  }\n\n  if (op == 1) { ;; cancel command, return nft, return last bid\n    throw_if(exit::auction_end(), now() >= end_time); ;; after timeout can't cancel\n    throw_if(exit::auction_end(), end? == true); ;; already canceled/ended\n    throw_if(exit::not_activated_yet(), activated? == false);\n    throw_if(exit::low_amount(), msg_value < 100000000);\n    throw_if(exit::cant_cancel_bid(), last_bid > 0); ;; can't cancel if someone already placed a bid\n    throw_unless(403, equal_slices(sender_addr, nft_owner) | equal_slices(sender_addr, mp_addr));\n    handle::cancel(sender_addr);\n    return ();\n  }\n\n  if (op == 2) { ;; stop auction\n    throw_if(exit::auction_end(), end? == true); ;; end = true mean this action already executed\n    throw_if(exit::not_activated_yet(), activated? == false);\n    throw_if(exit::low_amount(), msg_value < 100000000);\n    throw_if(exit::cant_stop_time(), now() < end_time); ;; can't end auction in progress, only after end time\n    throw_unless(403, equal_slices(sender_addr, nft_owner) | equal_slices(sender_addr, mp_addr) | equal_slices(sender_addr, last_member));\n    handle::end_auction(sender_addr, false);\n    return ();\n  }\n\n  if (op == 3) {\n    ;; just accept coins\n    return ();\n  }\n\n  if (activated? == false) {\n    throw(exit::not_activated_yet());\n    return ();\n  }\n\n  if ((end? == true) | (now() >= end_time)) {\n    throw(exit::auction_end());\n    return ();\n  }\n\n  ;; new bid\n\n  var profitable = math::check_profitable(mp_fee_factor, mp_fee_base, royalty_fee_factor, royalty_fee_base);\n  throw_if(exit::non_profitable(), profitable == 0); ;; decline bids for invalid contract\n  int duration = end_time - now();\n  ;; auction large than 20 days not allowed\n  throw_if(exit::its_too_log_auc(), duration > 60 * 60 * 24 * 20);\n\n  ;; max bid buy nft\n  if ((msg_value >= max_bid + 100000000) & (max_bid > 0)) { ;; 0.1 TON\n    ;; end aution for this bid\n    return_last_bid(my_balance);\n    last_member = sender_addr;\n    last_bid = max_bid;\n    last_bid_at = now();\n    last_query_id = query_id;\n    handle::end_auction(sender_addr, false);\n    return ();\n  }\n\n  ;; prevent bid at last second\n  if ((end_time - step_time) < now()) {\n    end_time += step_time;\n  }\n\n  ifnot(last_bid) {\n    throw_if(exit::low_bid(), msg_value < min_bid);\n    last_bid = msg_value;\n    last_member = sender_addr;\n    last_bid_at = now();\n    last_query_id = query_id;\n    pack_data();\n    return ();\n  }\n\n  int new_min_bid = get_next_min_bid();\n  if (msg_value < new_min_bid) {\n    throw(exit::low_bid());\n    return ();\n  }\n\n  return_last_bid(my_balance);\n\n  last_member = sender_addr;\n  last_bid = msg_value;\n  last_bid_at = now();\n  last_query_id = query_id;\n\n  pack_data();\n}\n\n{-\n    Message for deploy contract external\n-}\n() recv_external(slice in_msg) impure {\n  init_data();\n\n  var (op, _) = get_command_code(in_msg);\n\n  if (op == 2) { ;; stop auction\n    throw_if(exit::not_activated_yet(), activated? == false);\n    throw_if(exit::auction_end(), end? == true); ;; end = true mean this action already executed\n    throw_if(exit::cant_stop_time(), now() < end_time); ;; can't end auction in progress, only after end time\n    handle::end_auction(nft_owner, true);\n    accept_message();\n    return ();\n  }\n\n  throw(0xffff);\n}\n\n;; 1  2    3    4      5      6      7    8      9    10     11   12   13     14   15   16   17   18   19   20\n(int, int, int, slice, slice, slice, int, slice, int, slice, int, int, slice, int, int, int, int, int, int, int) get_sale_data() method_id {\n  init_data();\n\n  var (\n    mp_fee_addr,\n    royalty_fee_addr\n  ) = get_fees_addresses();\n\n  var profitable = math::check_profitable(mp_fee_factor, mp_fee_base, royalty_fee_factor, royalty_fee_base);\n  throw_if(exit::non_profitable(), profitable == 0);\n\n  return (\n    0x415543, ;; 1 nft aucion (\"AUC\")\n    end?, ;; 2\n    end_time, ;; 3\n    mp_addr, ;; 4\n    nft_addr, ;; 5\n    nft_owner, ;; 6\n    last_bid, ;; 7\n    last_member, ;; 8\n    min_step, ;; 9\n    mp_fee_addr, ;; 10\n    mp_fee_factor, mp_fee_base, ;; 11, 12\n    royalty_fee_addr, ;; 13\n    royalty_fee_factor, royalty_fee_base, ;; 14, 15\n    max_bid, ;; 16\n    min_bid, ;; 17\n    created_at?, ;; 18\n    last_bid_at, ;; 19\n    is_canceled? ;; 20\n  );\n}\n\n\n(int, int, int, slice, slice, slice, int, slice, int, slice, int, int, slice, int, int, int, int, int, int, int, int, int) get_auction_data() method_id {\n  init_data();\n\n  var (\n    mp_fee_addr,\n    royalty_fee_addr\n  ) = get_fees_addresses();\n\n  var profitable = math::check_profitable(mp_fee_factor, mp_fee_base, royalty_fee_factor, royalty_fee_base);\n  throw_if(exit::non_profitable(), profitable == 0);\n\n  if (last_bid > 0) {\n    min_bid = get_next_min_bid();\n  }\n\n  return (\n    activated?, ;;1\n    end?, ;; 2\n    end_time, ;; 3\n    mp_addr, ;; 4\n    nft_addr, ;; 5\n    nft_owner, ;; 6\n    last_bid, ;; 7\n    last_member, ;; 8\n    min_step, ;; 9 min step\n    mp_fee_addr, ;; 10\n    mp_fee_factor, mp_fee_base, ;; 11, 12\n    royalty_fee_addr, ;; 13\n    royalty_fee_factor, royalty_fee_base, ;; 14, 15\n    max_bid, ;; 16\n    min_bid, ;; 17\n    created_at?, ;; 18\n    last_bid_at, ;; 19\n    is_canceled?, ;; 20\n    step_time, ;; 21\n    last_query_id ;; 22\n  );\n}\n",
        "is_entrypoint": true,
        "is_std_lib": false,
        "include_in_command": true
      },
      {
        "name": "imports/stdlib.fc",
        "content": ";; Standard library for funC\n;;\n\nforall X -> tuple cons(X head, tuple tail) asm \"CONS\";\nforall X -> (X, tuple) uncons(tuple list) asm \"UNCONS\";\nforall X -> (tuple, X) list_next(tuple list) asm( -> 1 0) \"UNCONS\";\nforall X -> X car(tuple list) asm \"CAR\";\ntuple cdr(tuple list) asm \"CDR\";\ntuple empty_tuple() asm \"NIL\";\nforall X -> tuple tpush(tuple t, X value) asm \"TPUSH\";\nforall X -> (tuple, ()) ~tpush(tuple t, X value) asm \"TPUSH\";\nforall X -> [X] single(X x) asm \"SINGLE\";\nforall X -> X unsingle([X] t) asm \"UNSINGLE\";\nforall X, Y -> [X, Y] pair(X x, Y y) asm \"PAIR\";\nforall X, Y -> (X, Y) unpair([X, Y] t) asm \"UNPAIR\";\nforall X, Y, Z -> [X, Y, Z] triple(X x, Y y, Z z) asm \"TRIPLE\";\nforall X, Y, Z -> (X, Y, Z) untriple([X, Y, Z] t) asm \"UNTRIPLE\";\nforall X, Y, Z, W -> [X, Y, Z, W] tuple4(X x, Y y, Z z, W w) asm \"4 TUPLE\";\nforall X, Y, Z, W -> (X, Y, Z, W) untuple4([X, Y, Z, W] t) asm \"4 UNTUPLE\";\nforall X -> X first(tuple t) asm \"FIRST\";\nforall X -> X second(tuple t) asm \"SECOND\";\nforall X -> X third(tuple t) asm \"THIRD\";\nforall X -> X fourth(tuple t) asm \"3 INDEX\";\nforall X, Y -> X pair_first([X, Y] p) asm \"FIRST\";\nforall X, Y -> Y pair_second([X, Y] p) asm \"SECOND\";\nforall X, Y, Z -> X triple_first([X, Y, Z] p) asm \"FIRST\";\nforall X, Y, Z -> Y triple_second([X, Y, Z] p) asm \"SECOND\";\nforall X, Y, Z -> Z triple_third([X, Y, Z] p) asm \"THIRD\";\nforall X -> X null() asm \"PUSHNULL\";\nforall X -> (X, ()) ~impure_touch(X x) impure asm \"NOP\";\n\nint now() asm \"NOW\";\nslice my_address() asm \"MYADDR\";\n[int, cell] get_balance() asm \"BALANCE\";\nint cur_lt() asm \"LTIME\";\nint block_lt() asm \"BLOCKLT\";\n\nint cell_hash(cell c) asm \"HASHCU\";\nint slice_hash(slice s) asm \"HASHSU\";\nint string_hash(slice s) asm \"SHA256U\";\n\nint check_signature(int hash, slice signature, int public_key) asm \"CHKSIGNU\";\nint check_data_signature(slice data, slice signature, int public_key) asm \"CHKSIGNS\";\n\n(int, int, int) compute_data_size(cell c, int max_cells) impure asm \"CDATASIZE\";\n(int, int, int) slice_compute_data_size(slice s, int max_cells) impure asm \"SDATASIZE\";\n(int, int, int, int) compute_data_size?(cell c, int max_cells) asm \"CDATASIZEQ NULLSWAPIFNOT2 NULLSWAPIFNOT\";\n(int, int, int, int) slice_compute_data_size?(cell c, int max_cells) asm \"SDATASIZEQ NULLSWAPIFNOT2 NULLSWAPIFNOT\";\n\n;; () throw_if(int excno, int cond) impure asm \"THROWARGIF\";\n\n() dump_stack() impure asm \"DUMPSTK\";\n\ncell get_data() asm \"c4 PUSH\";\n() set_data(cell c) impure asm \"c4 POP\";\ncont get_c3() impure asm \"c3 PUSH\";\n() set_c3(cont c) impure asm \"c3 POP\";\ncont bless(slice s) impure asm \"BLESS\";\n\n() accept_message() impure asm \"ACCEPT\";\n() set_gas_limit(int limit) impure asm \"SETGASLIMIT\";\n() commit() impure asm \"COMMIT\";\n() buy_gas(int gram) impure asm \"BUYGAS\";\n\nint min(int x, int y) asm \"MIN\";\nint max(int x, int y) asm \"MAX\";\n(int, int) minmax(int x, int y) asm \"MINMAX\";\nint abs(int x) asm \"ABS\";\n\nslice begin_parse(cell c) asm \"CTOS\";\n() end_parse(slice s) impure asm \"ENDS\";\n(slice, cell) load_ref(slice s) asm( -> 1 0) \"LDREF\";\ncell preload_ref(slice s) asm \"PLDREF\";\n;; (slice, int) ~load_int(slice s, int len) asm(s len -> 1 0) \"LDIX\";\n;; (slice, int) ~load_uint(slice s, int len) asm( -> 1 0) \"LDUX\";\n;; int preload_int(slice s, int len) asm \"PLDIX\";\n;; int preload_uint(slice s, int len) asm \"PLDUX\";\n;; (slice, slice) load_bits(slice s, int len) asm(s len -> 1 0) \"LDSLICEX\";\n;; slice preload_bits(slice s, int len) asm \"PLDSLICEX\";\n(slice, int) load_grams(slice s) asm( -> 1 0) \"LDGRAMS\";\nslice skip_bits(slice s, int len) asm \"SDSKIPFIRST\";\n(slice, ()) ~skip_bits(slice s, int len) asm \"SDSKIPFIRST\";\nslice first_bits(slice s, int len) asm \"SDCUTFIRST\";\nslice skip_last_bits(slice s, int len) asm \"SDSKIPLAST\";\n(slice, ()) ~skip_last_bits(slice s, int len) asm \"SDSKIPLAST\";\nslice slice_last(slice s, int len) asm \"SDCUTLAST\";\n(slice, cell) load_dict(slice s) asm( -> 1 0) \"LDDICT\";\ncell preload_dict(slice s) asm \"PLDDICT\";\nslice skip_dict(slice s) asm \"SKIPDICT\";\n\n(slice, cell) load_maybe_ref(slice s) asm( -> 1 0) \"LDOPTREF\";\ncell preload_maybe_ref(slice s) asm \"PLDOPTREF\";\nbuilder store_maybe_ref(builder b, cell c) asm(c b) \"STOPTREF\";\n\nint cell_depth(cell c) asm \"CDEPTH\";\n\nint slice_refs(slice s) asm \"SREFS\";\nint slice_bits(slice s) asm \"SBITS\";\n(int, int) slice_bits_refs(slice s) asm \"SBITREFS\";\nint slice_empty?(slice s) asm \"SEMPTY\";\nint slice_data_empty?(slice s) asm \"SDEMPTY\";\nint slice_refs_empty?(slice s) asm \"SREMPTY\";\nint slice_depth(slice s) asm \"SDEPTH\";\n\nint builder_refs(builder b) asm \"BREFS\";\nint builder_bits(builder b) asm \"BBITS\";\nint builder_depth(builder b) asm \"BDEPTH\";\n\nbuilder begin_cell() asm \"NEWC\";\ncell end_cell(builder b) asm \"ENDC\";\n    builder store_ref(builder b, cell c) asm(c b) \"STREF\";\n;; builder store_uint(builder b, int x, int len) asm(x b len) \"STUX\";\n;; builder store_int(builder b, int x, int len) asm(x b len) \"STIX\";\nbuilder store_slice(builder b, slice s) asm \"STSLICER\";\nbuilder store_grams(builder b, int x) asm \"STGRAMS\";\nbuilder store_dict(builder b, cell c) asm(c b) \"STDICT\";\n\n(slice, slice) load_msg_addr(slice s) asm( -> 1 0) \"LDMSGADDR\";\ntuple parse_addr(slice s) asm \"PARSEMSGADDR\";\n(int, int) parse_std_addr(slice s) asm \"REWRITESTDADDR\";\n(int, slice) parse_var_addr(slice s) asm \"REWRITEVARADDR\";\n\ncell idict_set_ref(cell dict, int key_len, int index, cell value) asm(value index dict key_len) \"DICTISETREF\";\n(cell, ()) ~idict_set_ref(cell dict, int key_len, int index, cell value) asm(value index dict key_len) \"DICTISETREF\";\ncell udict_set_ref(cell dict, int key_len, int index, cell value) asm(value index dict key_len) \"DICTUSETREF\";\n(cell, ()) ~udict_set_ref(cell dict, int key_len, int index, cell value) asm(value index dict key_len) \"DICTUSETREF\";\ncell idict_get_ref(cell dict, int key_len, int index) asm(index dict key_len) \"DICTIGETOPTREF\";\n(cell, int) idict_get_ref?(cell dict, int key_len, int index) asm(index dict key_len) \"DICTIGETREF\";\n(cell, int) udict_get_ref?(cell dict, int key_len, int index) asm(index dict key_len) \"DICTUGETREF\";\n(cell, cell) idict_set_get_ref(cell dict, int key_len, int index, cell value) asm(value index dict key_len) \"DICTISETGETOPTREF\";\n(cell, cell) udict_set_get_ref(cell dict, int key_len, int index, cell value) asm(value index dict key_len) \"DICTUSETGETOPTREF\";\n(cell, int) idict_delete?(cell dict, int key_len, int index) asm(index dict key_len) \"DICTIDEL\";\n(cell, int) udict_delete?(cell dict, int key_len, int index) asm(index dict key_len) \"DICTUDEL\";\n(slice, int) idict_get?(cell dict, int key_len, int index) asm(index dict key_len) \"DICTIGET\" \"NULLSWAPIFNOT\";\n(slice, int) udict_get?(cell dict, int key_len, int index) asm(index dict key_len) \"DICTUGET\" \"NULLSWAPIFNOT\";\n(cell, slice, int) idict_delete_get?(cell dict, int key_len, int index) asm(index dict key_len) \"DICTIDELGET\" \"NULLSWAPIFNOT\";\n(cell, slice, int) udict_delete_get?(cell dict, int key_len, int index) asm(index dict key_len) \"DICTUDELGET\" \"NULLSWAPIFNOT\";\n(cell, (slice, int)) ~idict_delete_get?(cell dict, int key_len, int index) asm(index dict key_len) \"DICTIDELGET\" \"NULLSWAPIFNOT\";\n(cell, (slice, int)) ~udict_delete_get?(cell dict, int key_len, int index) asm(index dict key_len) \"DICTUDELGET\" \"NULLSWAPIFNOT\";\ncell udict_set(cell dict, int key_len, int index, slice value) asm(value index dict key_len) \"DICTUSET\";\n(cell, ()) ~udict_set(cell dict, int key_len, int index, slice value) asm(value index dict key_len) \"DICTUSET\";\ncell idict_set(cell dict, int key_len, int index, slice value) asm(value index dict key_len) \"DICTISET\";\n(cell, ()) ~idict_set(cell dict, int key_len, int index, slice value) asm(value index dict key_len) \"DICTISET\";\ncell dict_set(cell dict, int key_len, slice index, slice value) asm(value index dict key_len) \"DICTSET\";\n(cell, ()) ~dict_set(cell dict, int key_len, slice index, slice value) asm(value index dict key_len) \"DICTSET\";\n(cell, int) udict_add?(cell dict, int key_len, int index, slice value) asm(value index dict key_len) \"DICTUADD\";\n(cell, int) udict_replace?(cell dict, int key_len, int index, slice value) asm(value index dict key_len) \"DICTUREPLACE\";\n(cell, int) idict_add?(cell dict, int key_len, int index, slice value) asm(value index dict key_len) \"DICTIADD\";\n(cell, int) idict_replace?(cell dict, int key_len, int index, slice value) asm(value index dict key_len) \"DICTIREPLACE\";\ncell udict_set_builder(cell dict, int key_len, int index, builder value) asm(value index dict key_len) \"DICTUSETB\";\n(cell, ()) ~udict_set_builder(cell dict, int key_len, int index, builder value) asm(value index dict key_len) \"DICTUSETB\";\ncell idict_set_builder(cell dict, int key_len, int index, builder value) asm(value index dict key_len) \"DICTISETB\";\n(cell, ()) ~idict_set_builder(cell dict, int key_len, int index, builder value) asm(value index dict key_len) \"DICTISETB\";\ncell dict_set_builder(cell dict, int key_len, slice index, builder value) asm(value index dict key_len) \"DICTSETB\";\n(cell, ()) ~dict_set_builder(cell dict, int key_len, slice index, builder value) asm(value index dict key_len) \"DICTSETB\";\n(cell, int) udict_add_builder?(cell dict, int key_len, int index, builder value) asm(value index dict key_len) \"DICTUADDB\";\n(cell, int) udict_replace_builder?(cell dict, int key_len, int index, builder value) asm(value index dict key_len) \"DICTUREPLACEB\";\n(cell, int) idict_add_builder?(cell dict, int key_len, int index, builder value) asm(value index dict key_len) \"DICTIADDB\";\n(cell, int) idict_replace_builder?(cell dict, int key_len, int index, builder value) asm(value index dict key_len) \"DICTIREPLACEB\";\n(cell, int, slice, int) udict_delete_get_min(cell dict, int key_len) asm(-> 0 2 1 3) \"DICTUREMMIN\" \"NULLSWAPIFNOT2\";\n(cell, (int, slice, int)) ~udict::delete_get_min(cell dict, int key_len) asm(-> 0 2 1 3) \"DICTUREMMIN\" \"NULLSWAPIFNOT2\";\n(cell, int, slice, int) idict_delete_get_min(cell dict, int key_len) asm(-> 0 2 1 3) \"DICTIREMMIN\" \"NULLSWAPIFNOT2\";\n(cell, (int, slice, int)) ~idict::delete_get_min(cell dict, int key_len) asm(-> 0 2 1 3) \"DICTIREMMIN\" \"NULLSWAPIFNOT2\";\n(cell, slice, slice, int) dict_delete_get_min(cell dict, int key_len) asm(-> 0 2 1 3) \"DICTREMMIN\" \"NULLSWAPIFNOT2\";\n(cell, (slice, slice, int)) ~dict::delete_get_min(cell dict, int key_len) asm(-> 0 2 1 3) \"DICTREMMIN\" \"NULLSWAPIFNOT2\";\n(cell, int, slice, int) udict_delete_get_max(cell dict, int key_len) asm(-> 0 2 1 3) \"DICTUREMMAX\" \"NULLSWAPIFNOT2\";\n(cell, (int, slice, int)) ~udict::delete_get_max(cell dict, int key_len) asm(-> 0 2 1 3) \"DICTUREMMAX\" \"NULLSWAPIFNOT2\";\n(cell, int, slice, int) idict_delete_get_max(cell dict, int key_len) asm(-> 0 2 1 3) \"DICTIREMMAX\" \"NULLSWAPIFNOT2\";\n(cell, (int, slice, int)) ~idict::delete_get_max(cell dict, int key_len) asm(-> 0 2 1 3) \"DICTIREMMAX\" \"NULLSWAPIFNOT2\";\n(cell, slice, slice, int) dict_delete_get_max(cell dict, int key_len) asm(-> 0 2 1 3) \"DICTREMMAX\" \"NULLSWAPIFNOT2\";\n(cell, (slice, slice, int)) ~dict::delete_get_max(cell dict, int key_len) asm(-> 0 2 1 3) \"DICTREMMAX\" \"NULLSWAPIFNOT2\";\n(int, slice, int) udict_get_min?(cell dict, int key_len) asm (-> 1 0 2) \"DICTUMIN\" \"NULLSWAPIFNOT2\";\n(int, slice, int) udict_get_max?(cell dict, int key_len) asm (-> 1 0 2) \"DICTUMAX\" \"NULLSWAPIFNOT2\";\n(int, cell, int) udict_get_min_ref?(cell dict, int key_len) asm (-> 1 0 2) \"DICTUMINREF\" \"NULLSWAPIFNOT2\";\n(int, cell, int) udict_get_max_ref?(cell dict, int key_len) asm (-> 1 0 2) \"DICTUMAXREF\" \"NULLSWAPIFNOT2\";\n(int, slice, int) idict_get_min?(cell dict, int key_len) asm (-> 1 0 2) \"DICTIMIN\" \"NULLSWAPIFNOT2\";\n(int, slice, int) idict_get_max?(cell dict, int key_len) asm (-> 1 0 2) \"DICTIMAX\" \"NULLSWAPIFNOT2\";\n(int, cell, int) idict_get_min_ref?(cell dict, int key_len) asm (-> 1 0 2) \"DICTIMINREF\" \"NULLSWAPIFNOT2\";\n(int, cell, int) idict_get_max_ref?(cell dict, int key_len) asm (-> 1 0 2) \"DICTIMAXREF\" \"NULLSWAPIFNOT2\";\n(int, slice, int) udict_get_next?(cell dict, int key_len, int pivot) asm(pivot dict key_len -> 1 0 2) \"DICTUGETNEXT\" \"NULLSWAPIFNOT2\";\n(int, slice, int) udict_get_nexteq?(cell dict, int key_len, int pivot) asm(pivot dict key_len -> 1 0 2) \"DICTUGETNEXTEQ\" \"NULLSWAPIFNOT2\";\n(int, slice, int) udict_get_prev?(cell dict, int key_len, int pivot) asm(pivot dict key_len -> 1 0 2) \"DICTUGETPREV\" \"NULLSWAPIFNOT2\";\n(int, slice, int) udict_get_preveq?(cell dict, int key_len, int pivot) asm(pivot dict key_len -> 1 0 2) \"DICTUGETPREVEQ\" \"NULLSWAPIFNOT2\";\n(int, slice, int) idict_get_next?(cell dict, int key_len, int pivot) asm(pivot dict key_len -> 1 0 2) \"DICTIGETNEXT\" \"NULLSWAPIFNOT2\";\n(int, slice, int) idict_get_nexteq?(cell dict, int key_len, int pivot) asm(pivot dict key_len -> 1 0 2) \"DICTIGETNEXTEQ\" \"NULLSWAPIFNOT2\";\n(int, slice, int) idict_get_prev?(cell dict, int key_len, int pivot) asm(pivot dict key_len -> 1 0 2) \"DICTIGETPREV\" \"NULLSWAPIFNOT2\";\n(int, slice, int) idict_get_preveq?(cell dict, int key_len, int pivot) asm(pivot dict key_len -> 1 0 2) \"DICTIGETPREVEQ\" \"NULLSWAPIFNOT2\";\ncell new_dict() asm \"NEWDICT\";\nint dict_empty?(cell c) asm \"DICTEMPTY\";\n\n(slice, slice, slice, int) pfxdict_get?(cell dict, int key_len, slice key) asm(key dict key_len) \"PFXDICTGETQ\" \"NULLSWAPIFNOT2\";\n(cell, int) pfxdict_set?(cell dict, int key_len, slice key, slice value) asm(value key dict key_len) \"PFXDICTSET\";\n(cell, int) pfxdict_delete?(cell dict, int key_len, slice key) asm(key dict key_len) \"PFXDICTDEL\";\n\ncell config_param(int x) asm \"CONFIGOPTPARAM\";\nint cell_null?(cell c) asm \"ISNULL\";\n\n() raw_reserve(int amount, int mode) impure asm \"RAWRESERVE\";\n() raw_reserve_extra(int amount, cell extra_amount, int mode) impure asm \"RAWRESERVEX\";\n() send_raw_message(cell msg, int mode) impure asm \"SENDRAWMSG\";\n() set_code(cell new_code) impure asm \"SETCODE\";\n\nint random() impure asm \"RANDU256\";\nint rand(int range) impure asm \"RAND\";\nint get_seed() impure asm \"RANDSEED\";\nint set_seed() impure asm \"SETRAND\";\n() randomize(int x) impure asm \"ADDRAND\";\n() randomize_lt() impure asm \"LTIME\" \"ADDRAND\";\n\nbuilder store_coins(builder b, int x) asm \"STVARUINT16\";\n(slice, int) load_coins(slice s) asm( -> 1 0) \"LDVARUINT16\";\n\nint equal_slices (slice a, slice b) asm \"SDEQ\";\nint builder_null?(builder b) asm \"ISNULL\";\nbuilder store_builder(builder to, builder from) asm \"STBR\";",
        "is_entrypoint": false,
        "is_std_lib": true,
        "include_in_command": false
      },
      {
        "name": "struct/math.func",
        "content": ";;\n;;  math utils\n;;\n\nint division(int a, int b) { ;; division with factor\n    return muldiv(a, 1000000000 {- 1e9 -}, b);\n}\n\nint multiply(int a, int b) { ;; multiply with factor\n    return muldiv (a, b, 1000000000 {- 1e9 -});\n}\n\nint math::get_percent(int a, int percent, int factor) {\n    if (factor == 0) {\n        return 0;\n    } else {\n        return division(multiply(a, percent), factor);\n    }\n}\n\nint math::check_profitable(int mp_fee_factor, int mp_fee_base, int royalty_fee_factor, int royalty_fee_base) {\n    int amount = 1000000000;\n    int mp_fee = math::get_percent(amount, mp_fee_factor, mp_fee_base);\n    int royalty_fee = math::get_percent(amount, royalty_fee_factor, royalty_fee_base);\n    int profit = amount - mp_fee - royalty_fee;\n    if (profit < 1) {\n        return 0;\n    }\n    return 1;\n}",
        "is_entrypoint": false,
        "is_std_lib": false,
        "include_in_command": false
      },
      {
        "name": "struct/msg-utils.func",
        "content": ";;\n;;  text constants for msg comments\n;;\n\nslice msg::cancel_msg()     asm \"<b 124 word cancel| $, b> <s PUSHSLICE\";\nslice msg::stop_msg()       asm \"<b 124 word stop| $, b> <s PUSHSLICE\";\nslice msg::finish_msg()       asm \"<b 124 word finish| $, b> <s PUSHSLICE\";\nslice msg::deploy()       asm \"<b 124 word deploy| $, b> <s PUSHSLICE\";\n\nslice msg::return_msg()     asm \"<b 124 word Your transaction has not been accepted.| $, b> <s PUSHSLICE\";\nslice msg::bid_return()     asm \"<b 124 word Your bid has been outbid by another user.| $, b> <s PUSHSLICE\";\nslice msg::mp_msg()         asm \"<b 124 word Marketplace fee| $, b> <s PUSHSLICE\";\nslice msg::royalty_msg()    asm \"<b 124 word Royalty| $, b> <s PUSHSLICE\";\nslice msg::profit_msg()     asm \"<b 124 word Profit| $, b> <s PUSHSLICE\";\nslice msg::auc_is_canceled() asm \"<b 124 word Auction has been cancelled.| $, b> <s PUSHSLICE\";",
        "is_entrypoint": false,
        "is_std_lib": false,
        "include_in_command": false
      },
      {
        "name": "struct/exit-codes.func",
        "content": ";;\n;;  custom TVM exit codes\n;;\n\nint exit::low_bid()             asm \"1000 PUSHINT\";\nint exit::auction_init()        asm \"1001 PUSHINT\";\nint exit::no_transfer()         asm \"1002 PUSHINT\";\nint exit::not_message()         asm \"1003 PUSHINT\";\nint exit::not_cancel()          asm \"1004 PUSHINT\";\nint exit::auction_end()         asm \"1005 PUSHINT\";\nint exit::already_activated()   asm \"1006 PUSHINT\";\nint exit::cant_cancel_end()     asm \"1007 PUSHINT\";\nint exit::low_amount()          asm \"1008 PUSHINT\";\nint exit::cant_cancel_bid()     asm \"1009 PUSHINT\";\nint exit::cant_stop_time()      asm \"1010 PUSHINT\";\nint exit::non_profitable()      asm \"1011 PUSHINT\";\nint exit::bad_mode()            asm \"1012 PUSHINT\";\nint exit::last_bid_too_close()  asm \"1013 PUSHINT\";\nint exit::its_too_log_auc()     asm \"1014 PUSHINT\";\nint exit::not_activated_yet()   asm \"1015 PUSHINT\";\n",
        "is_entrypoint": false,
        "is_std_lib": false,
        "include_in_command": false
      },
      {
        "name": "struct/op-codes.func",
        "content": ";;\n;;  op codes\n;;\n\nint op::transfer()              asm \"0x5fcc3d14 PUSHINT\";\nint op::ownership_assigned()    asm \"0x05138d91 PUSHINT\";",
        "is_entrypoint": false,
        "is_std_lib": false,
        "include_in_command": false
      }
    ]
  }
}