name: TON Blockchain Indexer

on:
  schedule:
    - cron: '*/15 * * * *'
  workflow_dispatch:
    inputs:
      duration_minutes:
        description: 'Duration to run indexer (minutes)'
        required: false
        default: '9'
        type: string

permissions:
  contents: write

concurrency:
  group: ton-indexer
  cancel-in-progress: false

jobs:
  index:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository (sparse, no data/)
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        persist-credentials: true
        partial-clone: true
        filter: "blob:none"
        sparse-checkout: |
          /*
          !/data
        sparse-checkout-cone-mode: false

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Configure Git
      run: |
        git config --global user.name 'TON Indexer Bot'
        git config --global user.email 'indexer@github-actions.local'

    - name: Create .env file
      run: |
        echo "TONAPI_KEY=AFPJTKEBPOX3AIYAAAAKA2HWOTRNJP5MUCV5DMDCZAAOCPSAYEYS3CILNQVLF2HWKED6USY" > .env
        echo "LOG_LEVEL=info" >> .env
        echo "LOG_PRETTY=false" >> .env
        echo "MAX_CONCURRENT_REQUESTS=3" >> .env
        echo "ACCOUNTS_PER_PAGE=50" >> .env
        echo "REQUEST_DELAY_MS=100" >> .env

    - name: Ensure data directory exists
      run: mkdir -p data

    - name: Run TON Indexer (Timed Mode)
      run: |
        DURATION=${{ github.event.inputs.duration_minutes || '9' }}
        echo "🚀 Starting TON indexer for ${DURATION} minutes..."
        npm run build
        timeout $((DURATION * 60)) node dist/index.js timed ${DURATION} || echo "⏰ Indexer completed (timeout or finished)"

    - name: Check for changes
      id: changes
      run: |
        git fetch origin main
        git rebase origin/main

        git add data/ cursor.txt
        if git diff --staged --quiet; then
          echo "has_changes=false" >> $GITHUB_OUTPUT
          echo "📝 No changes to commit"
        else
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "📝 Changes detected"
        fi

    - name: Commit and push changes
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        DATA_FILES=$(find data -name "*.json" | wc -l)
        NEW_FILES=$(git diff --staged --name-only --diff-filter=A | grep -E "\.json$" | wc -l)
        CURSOR_UPDATED=$(git diff --staged --name-only | grep -c cursor.txt)
        TIMESTAMP=$(date -u '+%Y-%m-%d %H:%M:%S UTC')

        COMMIT_MSG=$(
          echo "🤖 Automated indexing: ${TIMESTAMP}"
          echo
          echo "📊 Stats:"
          echo "- Total contract files: ${DATA_FILES}"
          echo "- New contracts in this run: ${NEW_FILES}"
          echo "- Cursor updated: $([ ${CURSOR_UPDATED} -eq 1 ] && echo 'Yes' || echo 'No')"
          echo
          echo "Generated by GitHub Actions workflow"
        )

        git commit -m "$COMMIT_MSG"
        git push --force-with-lease

    - name: Log indexing summary
      if: always()
      run: |
        echo "📈 Indexing Summary:"
        echo "- Total JSON files: $(find data -name "*.json" | wc -l 2>/dev/null || echo 0)"
        echo "- Data directory size: $(du -sh data 2>/dev/null | cut -f1 || echo '0B')"
        echo "- Cursor file exists: $([ -f cursor.txt ] && echo 'Yes' || echo 'No')"
        if [ -f cursor.txt ]; then
          echo "- Current cursor: $(cat cursor.txt 2>/dev/null || echo 'empty')"
        fi
